/*
* generated by Xtext
*/

package gr.upatras.ece.wcl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class SDLGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ServiceRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ServiceRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cServiceRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cImportsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportsImportParserRuleCall_1_0 = (RuleCall)cImportsAssignment_1.eContents().get(0);
		private final Assignment cOfferedServiceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOfferedServiceOfferedServiceParserRuleCall_2_0 = (RuleCall)cOfferedServiceAssignment_2.eContents().get(0);
		
		//ServiceRule:
		//	{ServiceRule} imports+=Import* offeredService=OfferedService;
		public ParserRule getRule() { return rule; }

		//{ServiceRule} imports+=Import* offeredService=OfferedService
		public Group getGroup() { return cGroup; }

		//{ServiceRule}
		public Action getServiceRuleAction_0() { return cServiceRuleAction_0; }

		//imports+=Import*
		public Assignment getImportsAssignment_1() { return cImportsAssignment_1; }

		//Import
		public RuleCall getImportsImportParserRuleCall_1_0() { return cImportsImportParserRuleCall_1_0; }

		//offeredService=OfferedService
		public Assignment getOfferedServiceAssignment_2() { return cOfferedServiceAssignment_2; }

		//OfferedService
		public RuleCall getOfferedServiceOfferedServiceParserRuleCall_2_0() { return cOfferedServiceOfferedServiceParserRuleCall_2_0; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportOfficeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Import:
		//	"import office" importURI=STRING ";";
		public ParserRule getRule() { return rule; }

		//"import office" importURI=STRING ";"
		public Group getGroup() { return cGroup; }

		//"import office"
		public Keyword getImportOfficeKeyword_0() { return cImportOfficeKeyword_0; }

		//importURI=STRING
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }

		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_1_0() { return cImportURISTRINGTerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class Service_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Service_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cServiceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cServiceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cServiceSettingsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cServiceSettingsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cServiceSettingsServiceSettingParserRuleCall_4_2_0 = (RuleCall)cServiceSettingsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cServiceSettingsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cServiceSettingsServiceSettingParserRuleCall_4_3_1_0 = (RuleCall)cServiceSettingsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Service_Impl returns services::Service:
		//	{services::Service} "Service" name=STRING "{" ("serviceSettings" "{" serviceSettings+=ServiceSetting (","
		//	serviceSettings+=ServiceSetting)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{services::Service} "Service" name=STRING "{" ("serviceSettings" "{" serviceSettings+=ServiceSetting (","
		//serviceSettings+=ServiceSetting)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{services::Service}
		public Action getServiceAction_0() { return cServiceAction_0; }

		//"Service"
		public Keyword getServiceKeyword_1() { return cServiceKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("serviceSettings" "{" serviceSettings+=ServiceSetting ("," serviceSettings+=ServiceSetting)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"serviceSettings"
		public Keyword getServiceSettingsKeyword_4_0() { return cServiceSettingsKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//serviceSettings+=ServiceSetting
		public Assignment getServiceSettingsAssignment_4_2() { return cServiceSettingsAssignment_4_2; }

		//ServiceSetting
		public RuleCall getServiceSettingsServiceSettingParserRuleCall_4_2_0() { return cServiceSettingsServiceSettingParserRuleCall_4_2_0; }

		//("," serviceSettings+=ServiceSetting)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//serviceSettings+=ServiceSetting
		public Assignment getServiceSettingsAssignment_4_3_1() { return cServiceSettingsAssignment_4_3_1; }

		//ServiceSetting
		public RuleCall getServiceSettingsServiceSettingParserRuleCall_4_3_1_0() { return cServiceSettingsServiceSettingParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class SettingTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SettingType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTideTypeSTRINGParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTideTypeEnumParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//SettingType returns services::SettingType:
		//	tideTypeSTRING | tideTypeEnum;
		public ParserRule getRule() { return rule; }

		//tideTypeSTRING | tideTypeEnum
		public Alternatives getAlternatives() { return cAlternatives; }

		//tideTypeSTRING
		public RuleCall getTideTypeSTRINGParserRuleCall_0() { return cTideTypeSTRINGParserRuleCall_0; }

		//tideTypeEnum
		public RuleCall getTideTypeEnumParserRuleCall_1() { return cTideTypeEnumParserRuleCall_1; }
	}

	public class ServiceSettingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ServiceSetting");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cServiceSettingAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cUserExposedAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cUserExposedUserExposedKeyword_1_0 = (Keyword)cUserExposedAssignment_1.eContents().get(0);
		private final Assignment cUserEditableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cUserEditableUserEditableKeyword_2_0 = (Keyword)cUserEditableAssignment_2.eContents().get(0);
		private final Assignment cCanBePublishedAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cCanBePublishedCanBePublishedKeyword_3_0 = (Keyword)cCanBePublishedAssignment_3.eContents().get(0);
		private final Keyword cServiceSettingKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cIdKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cIdAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cIdINTTerminalRuleCall_7_1_0 = (RuleCall)cIdAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cDescriptionKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cDescriptionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_8_1_0 = (RuleCall)cDescriptionAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cReadableKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cReadableAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cReadableEBooleanParserRuleCall_9_1_0 = (RuleCall)cReadableAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cWritableKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cWritableAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cWritableEBooleanParserRuleCall_10_1_0 = (RuleCall)cWritableAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cRequiresParamsKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cRequiresParamsAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final CrossReference cRequiresParamsAbstractSettingCrossReference_11_2_0 = (CrossReference)cRequiresParamsAssignment_11_2.eContents().get(0);
		private final RuleCall cRequiresParamsAbstractSettingSTRINGTerminalRuleCall_11_2_0_1 = (RuleCall)cRequiresParamsAbstractSettingCrossReference_11_2_0.eContents().get(1);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cCommaKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Assignment cRequiresParamsAssignment_11_3_1 = (Assignment)cGroup_11_3.eContents().get(1);
		private final CrossReference cRequiresParamsAbstractSettingCrossReference_11_3_1_0 = (CrossReference)cRequiresParamsAssignment_11_3_1.eContents().get(0);
		private final RuleCall cRequiresParamsAbstractSettingSTRINGTerminalRuleCall_11_3_1_0_1 = (RuleCall)cRequiresParamsAbstractSettingCrossReference_11_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cSettingTypeKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cSettingTypeAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cSettingTypeSettingTypeParserRuleCall_12_1_0 = (RuleCall)cSettingTypeAssignment_12_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		////ServiceSetting returns services::ServiceSetting:
		////	{services::ServiceSetting}
		////	'ServiceSetting'
		////	name=STRING
		////	'{'
		////		('userExposed' userExposed=EBoolean)?
		////		('userEditable' userEditable=EBoolean)?
		////		('canBePublished' canBePublished=EBoolean)?
		//////		('mappedToResourceSettings' '(' mappedToResourceSettings+=[resources::ResourceSetting|STRING] ( "," mappedToResourceSettings+=[resources::ResourceSetting|STRING])* ')' )?
		//////		('providedByResources' '(' providedByResources+=[resources::Resource|STRING] ( "," providedByResources+=[resources::Resource|STRING])* ')' )?
		////		('serviceSettingType' erviceSetting=SettingType)?
		////    '}';
		//ServiceSetting returns services::ServiceSetting:
		//	{services::ServiceSetting} userExposed?="userExposed"? userEditable?="userEditable"? canBePublished?="canBePublished"?
		//	"ServiceSetting" name=STRING "{" ("id" id=INT)? ("description" description=STRING)? ("Readable" Readable=EBoolean)?
		//	("Writable" Writable=EBoolean)? ("requiresParams" "(" requiresParams+=[services::AbstractSetting|STRING] (","
		//	requiresParams+=[services::AbstractSetting|STRING])* ")")? ("settingType" settingType=SettingType)? "}";
		public ParserRule getRule() { return rule; }

		//{services::ServiceSetting} userExposed?="userExposed"? userEditable?="userEditable"? canBePublished?="canBePublished"?
		//"ServiceSetting" name=STRING "{" ("id" id=INT)? ("description" description=STRING)? ("Readable" Readable=EBoolean)?
		//("Writable" Writable=EBoolean)? ("requiresParams" "(" requiresParams+=[services::AbstractSetting|STRING] (","
		//requiresParams+=[services::AbstractSetting|STRING])* ")")? ("settingType" settingType=SettingType)? "}"
		public Group getGroup() { return cGroup; }

		//{services::ServiceSetting}
		public Action getServiceSettingAction_0() { return cServiceSettingAction_0; }

		//userExposed?="userExposed"?
		public Assignment getUserExposedAssignment_1() { return cUserExposedAssignment_1; }

		//"userExposed"
		public Keyword getUserExposedUserExposedKeyword_1_0() { return cUserExposedUserExposedKeyword_1_0; }

		//userEditable?="userEditable"?
		public Assignment getUserEditableAssignment_2() { return cUserEditableAssignment_2; }

		//"userEditable"
		public Keyword getUserEditableUserEditableKeyword_2_0() { return cUserEditableUserEditableKeyword_2_0; }

		//canBePublished?="canBePublished"?
		public Assignment getCanBePublishedAssignment_3() { return cCanBePublishedAssignment_3; }

		//"canBePublished"
		public Keyword getCanBePublishedCanBePublishedKeyword_3_0() { return cCanBePublishedCanBePublishedKeyword_3_0; }

		//"ServiceSetting"
		public Keyword getServiceSettingKeyword_4() { return cServiceSettingKeyword_4; }

		//name=STRING
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_5_0() { return cNameSTRINGTerminalRuleCall_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//("id" id=INT)?
		public Group getGroup_7() { return cGroup_7; }

		//"id"
		public Keyword getIdKeyword_7_0() { return cIdKeyword_7_0; }

		//id=INT
		public Assignment getIdAssignment_7_1() { return cIdAssignment_7_1; }

		//INT
		public RuleCall getIdINTTerminalRuleCall_7_1_0() { return cIdINTTerminalRuleCall_7_1_0; }

		//("description" description=STRING)?
		public Group getGroup_8() { return cGroup_8; }

		//"description"
		public Keyword getDescriptionKeyword_8_0() { return cDescriptionKeyword_8_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_8_1() { return cDescriptionAssignment_8_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_8_1_0() { return cDescriptionSTRINGTerminalRuleCall_8_1_0; }

		//("Readable" Readable=EBoolean)?
		public Group getGroup_9() { return cGroup_9; }

		//"Readable"
		public Keyword getReadableKeyword_9_0() { return cReadableKeyword_9_0; }

		//Readable=EBoolean
		public Assignment getReadableAssignment_9_1() { return cReadableAssignment_9_1; }

		//EBoolean
		public RuleCall getReadableEBooleanParserRuleCall_9_1_0() { return cReadableEBooleanParserRuleCall_9_1_0; }

		//("Writable" Writable=EBoolean)?
		public Group getGroup_10() { return cGroup_10; }

		//"Writable"
		public Keyword getWritableKeyword_10_0() { return cWritableKeyword_10_0; }

		//Writable=EBoolean
		public Assignment getWritableAssignment_10_1() { return cWritableAssignment_10_1; }

		//EBoolean
		public RuleCall getWritableEBooleanParserRuleCall_10_1_0() { return cWritableEBooleanParserRuleCall_10_1_0; }

		//("requiresParams" "(" requiresParams+=[services::AbstractSetting|STRING] (","
		//requiresParams+=[services::AbstractSetting|STRING])* ")")?
		public Group getGroup_11() { return cGroup_11; }

		//"requiresParams"
		public Keyword getRequiresParamsKeyword_11_0() { return cRequiresParamsKeyword_11_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_11_1() { return cLeftParenthesisKeyword_11_1; }

		//requiresParams+=[services::AbstractSetting|STRING]
		public Assignment getRequiresParamsAssignment_11_2() { return cRequiresParamsAssignment_11_2; }

		//[services::AbstractSetting|STRING]
		public CrossReference getRequiresParamsAbstractSettingCrossReference_11_2_0() { return cRequiresParamsAbstractSettingCrossReference_11_2_0; }

		//STRING
		public RuleCall getRequiresParamsAbstractSettingSTRINGTerminalRuleCall_11_2_0_1() { return cRequiresParamsAbstractSettingSTRINGTerminalRuleCall_11_2_0_1; }

		//("," requiresParams+=[services::AbstractSetting|STRING])*
		public Group getGroup_11_3() { return cGroup_11_3; }

		//","
		public Keyword getCommaKeyword_11_3_0() { return cCommaKeyword_11_3_0; }

		//requiresParams+=[services::AbstractSetting|STRING]
		public Assignment getRequiresParamsAssignment_11_3_1() { return cRequiresParamsAssignment_11_3_1; }

		//[services::AbstractSetting|STRING]
		public CrossReference getRequiresParamsAbstractSettingCrossReference_11_3_1_0() { return cRequiresParamsAbstractSettingCrossReference_11_3_1_0; }

		//STRING
		public RuleCall getRequiresParamsAbstractSettingSTRINGTerminalRuleCall_11_3_1_0_1() { return cRequiresParamsAbstractSettingSTRINGTerminalRuleCall_11_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_11_4() { return cRightParenthesisKeyword_11_4; }

		//("settingType" settingType=SettingType)?
		public Group getGroup_12() { return cGroup_12; }

		//"settingType"
		public Keyword getSettingTypeKeyword_12_0() { return cSettingTypeKeyword_12_0; }

		//settingType=SettingType
		public Assignment getSettingTypeAssignment_12_1() { return cSettingTypeAssignment_12_1; }

		//SettingType
		public RuleCall getSettingTypeSettingTypeParserRuleCall_12_1_0() { return cSettingTypeSettingTypeParserRuleCall_12_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}

	public class OfferedServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OfferedService");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOfferedServiceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOfferedServiceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cServiceSettingsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cServiceSettingsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cServiceSettingsServiceSettingParserRuleCall_4_2_0 = (RuleCall)cServiceSettingsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cServiceSettingsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cServiceSettingsServiceSettingParserRuleCall_4_3_1_0 = (RuleCall)cServiceSettingsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//OfferedService returns services::OfferedService:
		//	{services::OfferedService} "OfferedService" name=STRING "{" ("serviceSettings" "{" serviceSettings+=ServiceSetting
		//	("," serviceSettings+=ServiceSetting)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{services::OfferedService} "OfferedService" name=STRING "{" ("serviceSettings" "{" serviceSettings+=ServiceSetting (","
		//serviceSettings+=ServiceSetting)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{services::OfferedService}
		public Action getOfferedServiceAction_0() { return cOfferedServiceAction_0; }

		//"OfferedService"
		public Keyword getOfferedServiceKeyword_1() { return cOfferedServiceKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("serviceSettings" "{" serviceSettings+=ServiceSetting ("," serviceSettings+=ServiceSetting)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"serviceSettings"
		public Keyword getServiceSettingsKeyword_4_0() { return cServiceSettingsKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//serviceSettings+=ServiceSetting
		public Assignment getServiceSettingsAssignment_4_2() { return cServiceSettingsAssignment_4_2; }

		//ServiceSetting
		public RuleCall getServiceSettingsServiceSettingParserRuleCall_4_2_0() { return cServiceSettingsServiceSettingParserRuleCall_4_2_0; }

		//("," serviceSettings+=ServiceSetting)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//serviceSettings+=ServiceSetting
		public Assignment getServiceSettingsAssignment_4_3_1() { return cServiceSettingsAssignment_4_3_1; }

		//ServiceSetting
		public RuleCall getServiceSettingsServiceSettingParserRuleCall_4_3_1_0() { return cServiceSettingsServiceSettingParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//	"true" | "false";
		public ParserRule getRule() { return rule; }

		//"true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}

	public class TideTypeSTRINGElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tideTypeSTRING");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTideTypeStringAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSTRINGKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDefaultValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDefaultValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDefaultValueSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDefaultValueAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//tideTypeSTRING returns services::tideTypeString:
		//	{services::tideTypeString} "STRING" //name=STRING
		//	"{" ("defaultValue" defaultValue=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//{services::tideTypeString} "STRING" //name=STRING
		//"{" ("defaultValue" defaultValue=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//{services::tideTypeString}
		public Action getTideTypeStringAction_0() { return cTideTypeStringAction_0; }

		//"STRING"
		public Keyword getSTRINGKeyword_1() { return cSTRINGKeyword_1; }

		////name=STRING
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("defaultValue" defaultValue=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"defaultValue"
		public Keyword getDefaultValueKeyword_3_0() { return cDefaultValueKeyword_3_0; }

		//defaultValue=STRING
		public Assignment getDefaultValueAssignment_3_1() { return cDefaultValueAssignment_3_1; }

		//STRING
		public RuleCall getDefaultValueSTRINGTerminalRuleCall_3_1_0() { return cDefaultValueSTRINGTerminalRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class TideTypeEnumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tideTypeEnum");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTideTypeEnumAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEnumKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDefaultValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDefaultValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cDefaultValueTideTypeEnumItemCrossReference_4_1_0 = (CrossReference)cDefaultValueAssignment_4_1.eContents().get(0);
		private final RuleCall cDefaultValueTideTypeEnumItemSTRINGTerminalRuleCall_4_1_0_1 = (RuleCall)cDefaultValueTideTypeEnumItemCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTideEnumlistKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cTideEnumlistAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cTideEnumlistTideTypeEnumItemParserRuleCall_5_2_0 = (RuleCall)cTideEnumlistAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cTideEnumlistAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cTideEnumlistTideTypeEnumItemParserRuleCall_5_3_1_0 = (RuleCall)cTideEnumlistAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//tideTypeEnum returns services::tideTypeEnum:
		//	{services::tideTypeEnum} "Enum" name=STRING "{" ("defaultValue" defaultValue=[services::tideTypeEnumItem|STRING])?
		//	("tideEnumlist" "{" tideEnumlist+=tideTypeEnumItem ("," tideEnumlist+=tideTypeEnumItem)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{services::tideTypeEnum} "Enum" name=STRING "{" ("defaultValue" defaultValue=[services::tideTypeEnumItem|STRING])?
		//("tideEnumlist" "{" tideEnumlist+=tideTypeEnumItem ("," tideEnumlist+=tideTypeEnumItem)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{services::tideTypeEnum}
		public Action getTideTypeEnumAction_0() { return cTideTypeEnumAction_0; }

		//"Enum"
		public Keyword getEnumKeyword_1() { return cEnumKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("defaultValue" defaultValue=[services::tideTypeEnumItem|STRING])?
		public Group getGroup_4() { return cGroup_4; }

		//"defaultValue"
		public Keyword getDefaultValueKeyword_4_0() { return cDefaultValueKeyword_4_0; }

		//defaultValue=[services::tideTypeEnumItem|STRING]
		public Assignment getDefaultValueAssignment_4_1() { return cDefaultValueAssignment_4_1; }

		//[services::tideTypeEnumItem|STRING]
		public CrossReference getDefaultValueTideTypeEnumItemCrossReference_4_1_0() { return cDefaultValueTideTypeEnumItemCrossReference_4_1_0; }

		//STRING
		public RuleCall getDefaultValueTideTypeEnumItemSTRINGTerminalRuleCall_4_1_0_1() { return cDefaultValueTideTypeEnumItemSTRINGTerminalRuleCall_4_1_0_1; }

		//("tideEnumlist" "{" tideEnumlist+=tideTypeEnumItem ("," tideEnumlist+=tideTypeEnumItem)* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"tideEnumlist"
		public Keyword getTideEnumlistKeyword_5_0() { return cTideEnumlistKeyword_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//tideEnumlist+=tideTypeEnumItem
		public Assignment getTideEnumlistAssignment_5_2() { return cTideEnumlistAssignment_5_2; }

		//tideTypeEnumItem
		public RuleCall getTideEnumlistTideTypeEnumItemParserRuleCall_5_2_0() { return cTideEnumlistTideTypeEnumItemParserRuleCall_5_2_0; }

		//("," tideEnumlist+=tideTypeEnumItem)*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//tideEnumlist+=tideTypeEnumItem
		public Assignment getTideEnumlistAssignment_5_3_1() { return cTideEnumlistAssignment_5_3_1; }

		//tideTypeEnumItem
		public RuleCall getTideEnumlistTideTypeEnumItemParserRuleCall_5_3_1_0() { return cTideEnumlistTideTypeEnumItemParserRuleCall_5_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class TideTypeEnumItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tideTypeEnumItem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTideTypeEnumItemAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTideTypeEnumItemKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//tideTypeEnumItem returns services::tideTypeEnumItem:
		//	{services::tideTypeEnumItem} "tideTypeEnumItem" "{" ("value" value=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//{services::tideTypeEnumItem} "tideTypeEnumItem" "{" ("value" value=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//{services::tideTypeEnumItem}
		public Action getTideTypeEnumItemAction_0() { return cTideTypeEnumItemAction_0; }

		//"tideTypeEnumItem"
		public Keyword getTideTypeEnumItemKeyword_1() { return cTideTypeEnumItemKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("value" value=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"value"
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }

		//value=STRING
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_1_0() { return cValueSTRINGTerminalRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	private ServiceRuleElements pServiceRule;
	private ImportElements pImport;
	private Service_ImplElements pService_Impl;
	private SettingTypeElements pSettingType;
	private ServiceSettingElements pServiceSetting;
	private OfferedServiceElements pOfferedService;
	private EBooleanElements pEBoolean;
	private TideTypeSTRINGElements pTideTypeSTRING;
	private TideTypeEnumElements pTideTypeEnum;
	private TideTypeEnumItemElements pTideTypeEnumItem;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public SDLGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ServiceRule:
	//	{ServiceRule} imports+=Import* offeredService=OfferedService;
	public ServiceRuleElements getServiceRuleAccess() {
		return (pServiceRule != null) ? pServiceRule : (pServiceRule = new ServiceRuleElements());
	}
	
	public ParserRule getServiceRuleRule() {
		return getServiceRuleAccess().getRule();
	}

	//Import:
	//	"import office" importURI=STRING ";";
	public ImportElements getImportAccess() {
		return (pImport != null) ? pImport : (pImport = new ImportElements());
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//Service_Impl returns services::Service:
	//	{services::Service} "Service" name=STRING "{" ("serviceSettings" "{" serviceSettings+=ServiceSetting (","
	//	serviceSettings+=ServiceSetting)* "}")? "}";
	public Service_ImplElements getService_ImplAccess() {
		return (pService_Impl != null) ? pService_Impl : (pService_Impl = new Service_ImplElements());
	}
	
	public ParserRule getService_ImplRule() {
		return getService_ImplAccess().getRule();
	}

	//SettingType returns services::SettingType:
	//	tideTypeSTRING | tideTypeEnum;
	public SettingTypeElements getSettingTypeAccess() {
		return (pSettingType != null) ? pSettingType : (pSettingType = new SettingTypeElements());
	}
	
	public ParserRule getSettingTypeRule() {
		return getSettingTypeAccess().getRule();
	}

	////ServiceSetting returns services::ServiceSetting:
	////	{services::ServiceSetting}
	////	'ServiceSetting'
	////	name=STRING
	////	'{'
	////		('userExposed' userExposed=EBoolean)?
	////		('userEditable' userEditable=EBoolean)?
	////		('canBePublished' canBePublished=EBoolean)?
	//////		('mappedToResourceSettings' '(' mappedToResourceSettings+=[resources::ResourceSetting|STRING] ( "," mappedToResourceSettings+=[resources::ResourceSetting|STRING])* ')' )?
	//////		('providedByResources' '(' providedByResources+=[resources::Resource|STRING] ( "," providedByResources+=[resources::Resource|STRING])* ')' )?
	////		('serviceSettingType' erviceSetting=SettingType)?
	////    '}';
	//ServiceSetting returns services::ServiceSetting:
	//	{services::ServiceSetting} userExposed?="userExposed"? userEditable?="userEditable"? canBePublished?="canBePublished"?
	//	"ServiceSetting" name=STRING "{" ("id" id=INT)? ("description" description=STRING)? ("Readable" Readable=EBoolean)?
	//	("Writable" Writable=EBoolean)? ("requiresParams" "(" requiresParams+=[services::AbstractSetting|STRING] (","
	//	requiresParams+=[services::AbstractSetting|STRING])* ")")? ("settingType" settingType=SettingType)? "}";
	public ServiceSettingElements getServiceSettingAccess() {
		return (pServiceSetting != null) ? pServiceSetting : (pServiceSetting = new ServiceSettingElements());
	}
	
	public ParserRule getServiceSettingRule() {
		return getServiceSettingAccess().getRule();
	}

	//OfferedService returns services::OfferedService:
	//	{services::OfferedService} "OfferedService" name=STRING "{" ("serviceSettings" "{" serviceSettings+=ServiceSetting
	//	("," serviceSettings+=ServiceSetting)* "}")? "}";
	public OfferedServiceElements getOfferedServiceAccess() {
		return (pOfferedService != null) ? pOfferedService : (pOfferedService = new OfferedServiceElements());
	}
	
	public ParserRule getOfferedServiceRule() {
		return getOfferedServiceAccess().getRule();
	}

	//EBoolean returns ecore::EBoolean:
	//	"true" | "false";
	public EBooleanElements getEBooleanAccess() {
		return (pEBoolean != null) ? pEBoolean : (pEBoolean = new EBooleanElements());
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}

	//tideTypeSTRING returns services::tideTypeString:
	//	{services::tideTypeString} "STRING" //name=STRING
	//	"{" ("defaultValue" defaultValue=STRING)? "}";
	public TideTypeSTRINGElements getTideTypeSTRINGAccess() {
		return (pTideTypeSTRING != null) ? pTideTypeSTRING : (pTideTypeSTRING = new TideTypeSTRINGElements());
	}
	
	public ParserRule getTideTypeSTRINGRule() {
		return getTideTypeSTRINGAccess().getRule();
	}

	//tideTypeEnum returns services::tideTypeEnum:
	//	{services::tideTypeEnum} "Enum" name=STRING "{" ("defaultValue" defaultValue=[services::tideTypeEnumItem|STRING])?
	//	("tideEnumlist" "{" tideEnumlist+=tideTypeEnumItem ("," tideEnumlist+=tideTypeEnumItem)* "}")? "}";
	public TideTypeEnumElements getTideTypeEnumAccess() {
		return (pTideTypeEnum != null) ? pTideTypeEnum : (pTideTypeEnum = new TideTypeEnumElements());
	}
	
	public ParserRule getTideTypeEnumRule() {
		return getTideTypeEnumAccess().getRule();
	}

	//tideTypeEnumItem returns services::tideTypeEnumItem:
	//	{services::tideTypeEnumItem} "tideTypeEnumItem" "{" ("value" value=STRING)? "}";
	public TideTypeEnumItemElements getTideTypeEnumItemAccess() {
		return (pTideTypeEnumItem != null) ? pTideTypeEnumItem : (pTideTypeEnumItem = new TideTypeEnumItemElements());
	}
	
	public ParserRule getTideTypeEnumItemRule() {
		return getTideTypeEnumItemAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" | "n" |
	//	"f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
