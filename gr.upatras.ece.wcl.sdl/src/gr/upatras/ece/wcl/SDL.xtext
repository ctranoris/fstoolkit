// automatically generated by Xtext
grammar gr.upatras.ece.wcl.SDL with org.eclipse.xtext.common.Terminals 


import "http://www.eclipse.org/emf/2002/Ecore" as ecore


import "platform:/resource/org.panlab.software.office.model/model/FederationOffice.ecore" as FederationOffice
import "platform:/resource/org.panlab.software.office.model/model/FederationOffice.ecore#//services" as services
import "platform:/resource/org.panlab.software.office.model/model/FederationOffice.ecore#//providersite" as providersite
import "platform:/resource/org.panlab.software.office.model/model/FederationOffice.ecore#//slareservations" as slareservations
//import 'platform:/resource/org.panlab.tide.model/model/tide.ecore#//providersite'   as providersite
//import 'platform:/resource/org.panlab.tide.model/model/tide.ecore#//slareservations'   as slareservations
//import 'platform:/resource/org.panlab.tide.model/model/tide.ecore#//networkelements'   as networkelements


generate officeSDL "http://wcl.ece.upatras.gr/SDL" 

ServiceRule:
	{ServiceRule}
	(imports+=Import)*
	offeredService=OfferedService
;	

Import :
  'import office' importURI=STRING ';'
; 

	
Service_Impl returns services::Service:
	{services::Service}
	'Service'
	name=STRING
	'{'
		('serviceSettings' '{' serviceSettings+=ServiceSetting ( "," serviceSettings+=ServiceSetting)* '}' )?
    '}';




SettingType returns services::SettingType:
	tideTypeSTRING | tideTypeEnum ;



//ServiceSetting returns services::ServiceSetting:
//	{services::ServiceSetting}
//	'ServiceSetting'
//	name=STRING
//	'{'
//		('userExposed' userExposed=EBoolean)?
//		('userEditable' userEditable=EBoolean)?
//		('canBePublished' canBePublished=EBoolean)?
////		('mappedToResourceSettings' '(' mappedToResourceSettings+=[resources::ResourceSetting|STRING] ( "," mappedToResourceSettings+=[resources::ResourceSetting|STRING])* ')' )?
////		('providedByResources' '(' providedByResources+=[resources::Resource|STRING] ( "," providedByResources+=[resources::Resource|STRING])* ')' )?
//		('serviceSettingType' erviceSetting=SettingType)?
//    '}';
    
ServiceSetting returns services::ServiceSetting:
	{services::ServiceSetting}
	(userExposed?='userExposed')?
	(userEditable?='userEditable')?
	(canBePublished?='canBePublished')?
	'ServiceSetting'
	name=STRING
	'{'
		('id' id=INT)?
		('description' description=STRING)?
		('Readable' Readable=EBoolean)?
		('Writable' Writable=EBoolean)?
		('requiresParams' '(' requiresParams+=[services::AbstractSetting|STRING] ( "," requiresParams+=[services::AbstractSetting|STRING])* ')' )?
		('settingType' settingType=SettingType)?		
    '}';


OfferedService returns services::OfferedService:
	{services::OfferedService}
	'OfferedService'
	name=STRING
	'{'
		('serviceSettings' '{' serviceSettings+=ServiceSetting ( "," serviceSettings+=ServiceSetting)* '}' )?
    '}';



EBoolean returns ecore::EBoolean:
	'true' | 'false';



tideTypeSTRING returns services::tideTypeString:
	{services::tideTypeString}
	'STRING'
	//name=STRING
	'{'
		('defaultValue' defaultValue=STRING)?
    '}';

tideTypeEnum returns services::tideTypeEnum:
	{services::tideTypeEnum}
	'Enum'
	name=STRING
	'{'
		('defaultValue' defaultValue=[services::tideTypeEnumItem|STRING])?
		('tideEnumlist' '{' tideEnumlist+=tideTypeEnumItem ( "," tideEnumlist+=tideTypeEnumItem)* '}' )?
    '}';




tideTypeEnumItem returns services::tideTypeEnumItem:
	{services::tideTypeEnumItem}
	'tideTypeEnumItem'
	'{'
		('value' value=STRING)?
    '}';



