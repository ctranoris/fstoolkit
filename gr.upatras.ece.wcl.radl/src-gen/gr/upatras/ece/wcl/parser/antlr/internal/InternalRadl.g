/*
* generated by Xtext
*/
grammar InternalRadl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package gr.upatras.ece.wcl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package gr.upatras.ece.wcl.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import gr.upatras.ece.wcl.services.RadlGrammarAccess;

}

@parser::members {

 	private RadlGrammarAccess grammarAccess;
 	
    public InternalRadlParser(TokenStream input, IAstFactory factory, RadlGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("gr/upatras/ece/wcl/parser/antlr/internal/InternalRadl.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "RADL";	
   	}
   	
   	@Override
   	protected RadlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleRADL
entryRuleRADL returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRADLRule(), currentNode); }
	 iv_ruleRADL=ruleRADL 
	 { $current=$iv_ruleRADL.current; } 
	 EOF 
;

// Rule RADL
ruleRADL returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRADLAccess().getImportsImportParserRuleCall_0_0(), currentNode); 
	    }
		lv_imports_0_0=ruleImport		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRADLRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"imports",
	        		lv_imports_0_0, 
	        		"Import", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRADLAccess().getResourceAdapterResourceAdapterParserRuleCall_1_0(), currentNode); 
	    }
		lv_resourceAdapter_1_0=ruleResourceAdapter		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRADLRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"resourceAdapter",
	        		lv_resourceAdapter_1_0, 
	        		"ResourceAdapter", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getImportRule(), currentNode); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'import service' 
    {
        createLeafNode(grammarAccess.getImportAccess().getImportServiceKeyword_0(), null); 
    }
(
(
		lv_importURI_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0(), "importURI"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImportRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"importURI",
	        		lv_importURI_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleResourceAdapter
entryRuleResourceAdapter returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getResourceAdapterRule(), currentNode); }
	 iv_ruleResourceAdapter=ruleResourceAdapter 
	 { $current=$iv_ruleResourceAdapter.current; } 
	 EOF 
;

// Rule ResourceAdapter
ruleResourceAdapter returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'Resource Adapter' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getResourceAdapterKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getResourceAdapterAccess().getNameSTRINGTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceAdapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'implements' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getImplementsKeyword_2_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceAdapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getResourceAdapterAccess().getImplnameOfferedServiceCrossReference_2_1_0(), "implname"); 
	}

)
))?(	'Configuration Parameters' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getConfigurationParametersKeyword_3_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getLeftCurlyBracketKeyword_3_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getResourceAdapterAccess().getConfParamsConfigurationParamParserRuleCall_3_2_0(), currentNode); 
	    }
		lv_confParams_6_0=ruleConfigurationParam		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceAdapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"confParams",
	        		lv_confParams_6_0, 
	        		"ConfigurationParam", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getRightCurlyBracketKeyword_3_3(), null); 
    }
)?(	'Binding Parameters' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getBindingParametersKeyword_4_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getLeftCurlyBracketKeyword_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getResourceAdapterAccess().getBindParamsBindingParamParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_bindParams_10_0=ruleBindingParam		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceAdapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"bindParams",
	        		lv_bindParams_10_0, 
	        		"BindingParam", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getRightCurlyBracketKeyword_4_3(), null); 
    }
)?(	'Supported Child Types' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getSupportedChildTypesKeyword_5_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getLeftCurlyBracketKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getResourceAdapterAccess().getChildParamsSupportedChildTypeParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_childParams_14_0=ruleSupportedChildType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceAdapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"childParams",
	        		lv_childParams_14_0, 
	        		"SupportedChildType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getRightCurlyBracketKeyword_5_3(), null); 
    }
)?(	'Allowed Types' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getAllowedTypesKeyword_6_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getLeftCurlyBracketKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getResourceAdapterAccess().getAllowParamsAllowedTypeParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_allowParams_18_0=ruleAllowedType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceAdapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"allowParams",
	        		lv_allowParams_18_0, 
	        		"AllowedType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getRightCurlyBracketKeyword_6_3(), null); 
    }
)?(	'On Update' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getOnUpdateKeyword_7_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getLeftCurlyBracketKeyword_7_1(), null); 
    }
	'ProcessOnAllConfigurationParametersComplete' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getProcessOnAllConfigurationParametersCompleteKeyword_7_2(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getEqualsSignKeyword_7_3(), null); 
    }
(
(
(
		lv_ConfComplete_24_1=	'YES' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getConfCompleteYESKeyword_7_4_0_0(), "ConfComplete"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceAdapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "ConfComplete", lv_ConfComplete_24_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_ConfComplete_24_2=	'NO' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getConfCompleteNOKeyword_7_4_0_1(), "ConfComplete"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceAdapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "ConfComplete", lv_ConfComplete_24_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)	';' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getSemicolonKeyword_7_5(), null); 
    }
	'RAProtocol' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getRAProtocolKeyword_7_6(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getResourceAdapterAccess().getProtocolProtocolParserRuleCall_7_7_0(), currentNode); 
	    }
		lv_protocol_27_0=ruleProtocol		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceAdapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"protocol",
	        		lv_protocol_27_0, 
	        		"Protocol", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getResourceAdapterAccess().getRightCurlyBracketKeyword_7_8(), null); 
    }
)?)
;





// Entry rule entryRuleConfigurationParam
entryRuleConfigurationParam returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConfigurationParamRule(), currentNode); }
	 iv_ruleConfigurationParam=ruleConfigurationParam 
	 { $current=$iv_ruleConfigurationParam.current; } 
	 EOF 
;

// Rule ConfigurationParam
ruleConfigurationParam returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getConfigurationParamAccess().getConfigurationParamAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getConfigurationParamAccess().getConfigurationParamAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConfigurationParamAccess().getParamTypeParameterTypeParserRuleCall_1_0(), currentNode); 
	    }
		lv_paramType_1_0=ruleParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConfigurationParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"paramType",
	        		lv_paramType_1_0, 
	        		"ParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
(
		lv_name_2_1=RULE_ID
		{
			createLeafNode(grammarAccess.getConfigurationParamAccess().getNameIDTerminalRuleCall_2_0_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConfigurationParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_1, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_name_2_2=RULE_STRING
		{
			createLeafNode(grammarAccess.getConfigurationParamAccess().getNameSTRINGTerminalRuleCall_2_0_1(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConfigurationParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_2, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(	'=' 
    {
        createLeafNode(grammarAccess.getConfigurationParamAccess().getEqualsSignKeyword_3_0(), null); 
    }
(
(
		lv_defValue_4_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getConfigurationParamAccess().getDefValueSTRINGTerminalRuleCall_3_1_0(), "defValue"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConfigurationParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defValue",
	        		lv_defValue_4_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(	'implements' 
    {
        createLeafNode(grammarAccess.getConfigurationParamAccess().getImplementsKeyword_4_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getConfigurationParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getConfigurationParamAccess().getServsettingServiceSettingCrossReference_4_1_0(), "servsetting"); 
	}

)
))?(	'description' 
    {
        createLeafNode(grammarAccess.getConfigurationParamAccess().getDescriptionKeyword_5_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getConfigurationParamAccess().getEqualsSignKeyword_5_1(), null); 
    }
(
(
		lv_descriptionValue_9_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getConfigurationParamAccess().getDescriptionValueSTRINGTerminalRuleCall_5_2_0(), "descriptionValue"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConfigurationParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"descriptionValue",
	        		lv_descriptionValue_9_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	';' 
    {
        createLeafNode(grammarAccess.getConfigurationParamAccess().getSemicolonKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleBindingParam
entryRuleBindingParam returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBindingParamRule(), currentNode); }
	 iv_ruleBindingParam=ruleBindingParam 
	 { $current=$iv_ruleBindingParam.current; } 
	 EOF 
;

// Rule BindingParam
ruleBindingParam returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getBindingParamAccess().getBindingParamAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getBindingParamAccess().getBindingParamAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBindingParamAccess().getParamTypeParameterTypeParserRuleCall_1_0(), currentNode); 
	    }
		lv_paramType_1_0=ruleParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"paramType",
	        		lv_paramType_1_0, 
	        		"ParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
(
		lv_name_2_1=RULE_ID
		{
			createLeafNode(grammarAccess.getBindingParamAccess().getNameIDTerminalRuleCall_2_0_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_1, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_name_2_2=RULE_STRING
		{
			createLeafNode(grammarAccess.getBindingParamAccess().getNameSTRINGTerminalRuleCall_2_0_1(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_2, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(	'=' 
    {
        createLeafNode(grammarAccess.getBindingParamAccess().getEqualsSignKeyword_3_0(), null); 
    }
(
(
		lv_defValue_4_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getBindingParamAccess().getDefValueSTRINGTerminalRuleCall_3_1_0(), "defValue"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defValue",
	        		lv_defValue_4_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(	'description' 
    {
        createLeafNode(grammarAccess.getBindingParamAccess().getDescriptionKeyword_4_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getBindingParamAccess().getEqualsSignKeyword_4_1(), null); 
    }
(
(
		lv_descriptionValue_7_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getBindingParamAccess().getDescriptionValueSTRINGTerminalRuleCall_4_2_0(), "descriptionValue"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"descriptionValue",
	        		lv_descriptionValue_7_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	';' 
    {
        createLeafNode(grammarAccess.getBindingParamAccess().getSemicolonKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleSupportedChildType
entryRuleSupportedChildType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSupportedChildTypeRule(), currentNode); }
	 iv_ruleSupportedChildType=ruleSupportedChildType 
	 { $current=$iv_ruleSupportedChildType.current; } 
	 EOF 
;

// Rule SupportedChildType
ruleSupportedChildType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getSupportedChildTypeAccess().getSupportedChildTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSupportedChildTypeAccess().getSupportedChildTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSupportedChildTypeAccess().getParamTypeParameterTypeParserRuleCall_1_0(), currentNode); 
	    }
		lv_paramType_1_0=ruleParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSupportedChildTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"paramType",
	        		lv_paramType_1_0, 
	        		"ParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
(
		lv_name_2_1=RULE_ID
		{
			createLeafNode(grammarAccess.getSupportedChildTypeAccess().getNameIDTerminalRuleCall_2_0_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSupportedChildTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_1, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_name_2_2=RULE_STRING
		{
			createLeafNode(grammarAccess.getSupportedChildTypeAccess().getNameSTRINGTerminalRuleCall_2_0_1(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSupportedChildTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_2, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(	'=' 
    {
        createLeafNode(grammarAccess.getSupportedChildTypeAccess().getEqualsSignKeyword_3_0(), null); 
    }
(
(
		lv_defValue_4_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getSupportedChildTypeAccess().getDefValueSTRINGTerminalRuleCall_3_1_0(), "defValue"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSupportedChildTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defValue",
	        		lv_defValue_4_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	';' 
    {
        createLeafNode(grammarAccess.getSupportedChildTypeAccess().getSemicolonKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleAllowedType
entryRuleAllowedType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAllowedTypeRule(), currentNode); }
	 iv_ruleAllowedType=ruleAllowedType 
	 { $current=$iv_ruleAllowedType.current; } 
	 EOF 
;

// Rule AllowedType
ruleAllowedType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getAllowedTypeAccess().getAllowedTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getAllowedTypeAccess().getAllowedTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAllowedTypeAccess().getParamTypeParameterTypeParserRuleCall_1_0(), currentNode); 
	    }
		lv_paramType_1_0=ruleParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAllowedTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"paramType",
	        		lv_paramType_1_0, 
	        		"ParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
(
		lv_name_2_1=RULE_ID
		{
			createLeafNode(grammarAccess.getAllowedTypeAccess().getNameIDTerminalRuleCall_2_0_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAllowedTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_1, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_name_2_2=RULE_STRING
		{
			createLeafNode(grammarAccess.getAllowedTypeAccess().getNameSTRINGTerminalRuleCall_2_0_1(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAllowedTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_2, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(	'=' 
    {
        createLeafNode(grammarAccess.getAllowedTypeAccess().getEqualsSignKeyword_3_0(), null); 
    }
(
(
		lv_defValue_4_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getAllowedTypeAccess().getDefValueSTRINGTerminalRuleCall_3_1_0(), "defValue"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAllowedTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defValue",
	        		lv_defValue_4_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	';' 
    {
        createLeafNode(grammarAccess.getAllowedTypeAccess().getSemicolonKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleProtocol
entryRuleProtocol returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getProtocolRule(), currentNode); }
	 iv_ruleProtocol=ruleProtocol 
	 { $current=$iv_ruleProtocol.current; } 
	 EOF 
;

// Rule Protocol
ruleProtocol returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getProtocolAccess().getRuleSSHParserRuleCall_0(), currentNode); 
    }
    this_ruleSSH_0=ruleruleSSH
    { 
        $current = $this_ruleSSH_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getProtocolAccess().getRuleHTTPParserRuleCall_1(), currentNode); 
    }
    this_ruleHTTP_1=ruleruleHTTP
    { 
        $current = $this_ruleHTTP_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getProtocolAccess().getRuleXMLRPCParserRuleCall_2(), currentNode); 
    }
    this_ruleXMLRPC_2=ruleruleXMLRPC
    { 
        $current = $this_ruleXMLRPC_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getProtocolAccess().getRuleJavaWrapperParserRuleCall_3(), currentNode); 
    }
    this_ruleJavaWrapper_3=ruleruleJavaWrapper
    { 
        $current = $this_ruleJavaWrapper_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleParameterType
entryRuleParameterType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParameterTypeRule(), currentNode); }
	 iv_ruleParameterType=ruleParameterType 
	 { $current=$iv_ruleParameterType.current; } 
	 EOF 
;

// Rule ParameterType
ruleParameterType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getParameterTypeAccess().getParameterTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getParameterTypeAccess().getParameterTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
(
		lv_pName_1_1=	'String' 
    {
        createLeafNode(grammarAccess.getParameterTypeAccess().getPNameStringKeyword_1_0_0(), "pName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "pName", lv_pName_1_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_pName_1_2=	'Integer' 
    {
        createLeafNode(grammarAccess.getParameterTypeAccess().getPNameIntegerKeyword_1_0_1(), "pName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "pName", lv_pName_1_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_pName_1_3=	'Boolean' 
    {
        createLeafNode(grammarAccess.getParameterTypeAccess().getPNameBooleanKeyword_1_0_2(), "pName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "pName", lv_pName_1_3, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_pName_1_4=	'Enum' 
    {
        createLeafNode(grammarAccess.getParameterTypeAccess().getPNameEnumKeyword_1_0_3(), "pName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "pName", lv_pName_1_4, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_pName_1_5=	'REFERENCE' 
    {
        createLeafNode(grammarAccess.getParameterTypeAccess().getPNameREFERENCEKeyword_1_0_4(), "pName"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "pName", lv_pName_1_5, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
))
;





// Entry rule entryRuleruleSSH
entryRuleruleSSH returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRuleSSHRule(), currentNode); }
	 iv_ruleruleSSH=ruleruleSSH 
	 { $current=$iv_ruleruleSSH.current; } 
	 EOF 
;

// Rule ruleSSH
ruleruleSSH returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getRuleSSHAccess().getRuleSSHAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRuleSSHAccess().getRuleSSHAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'SSH' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getSSHKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
	'Remote Machine' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getRemoteMachineKeyword_3(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getEqualsSignKeyword_4(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleSSHRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getRuleSSHAccess().getRemoteMachineScriptParamCrossReference_5_0(), "remoteMachine"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getSemicolonKeyword_6(), null); 
    }
	'RPort' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getRPortKeyword_7(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getEqualsSignKeyword_8(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleSSHRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getRuleSSHAccess().getRPortScriptParamCrossReference_9_0(), "RPort"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getSemicolonKeyword_10(), null); 
    }
	'RUsername' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getRUsernameKeyword_11(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getEqualsSignKeyword_12(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleSSHRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getRuleSSHAccess().getUsernameScriptParamCrossReference_13_0(), "username"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getSemicolonKeyword_14(), null); 
    }
	'RPassword' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getRPasswordKeyword_15(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getEqualsSignKeyword_16(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleSSHRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getRuleSSHAccess().getPasswordScriptParamCrossReference_17_0(), "password"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getSemicolonKeyword_18(), null); 
    }
	'RExecute' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getRExecuteKeyword_19(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getLeftCurlyBracketKeyword_20(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRuleSSHAccess().getCommandsRulSSH_commandsParserRuleCall_21_0(), currentNode); 
	    }
		lv_commands_21_0=rulerulSSH_commands		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleSSHRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"commands",
	        		lv_commands_21_0, 
	        		"rulSSH_commands", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getRightCurlyBracketKeyword_22(), null); 
    }
	'RExecuteDelete' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getRExecuteDeleteKeyword_23(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getLeftCurlyBracketKeyword_24(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRuleSSHAccess().getCommandsDeleteRulSSH_commandsParserRuleCall_25_0(), currentNode); 
	    }
		lv_commandsDelete_25_0=rulerulSSH_commands		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleSSHRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"commandsDelete",
	        		lv_commandsDelete_25_0, 
	        		"rulSSH_commands", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getRightCurlyBracketKeyword_26(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getRuleSSHAccess().getRightCurlyBracketKeyword_27(), null); 
    }
)
;





// Entry rule entryRuleruleJavaWrapper
entryRuleruleJavaWrapper returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRuleJavaWrapperRule(), currentNode); }
	 iv_ruleruleJavaWrapper=ruleruleJavaWrapper 
	 { $current=$iv_ruleruleJavaWrapper.current; } 
	 EOF 
;

// Rule ruleJavaWrapper
ruleruleJavaWrapper returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getRuleJavaWrapperAccess().getRuleJavaWrapperAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRuleJavaWrapperAccess().getRuleJavaWrapperAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'Java' 
    {
        createLeafNode(grammarAccess.getRuleJavaWrapperAccess().getJavaKeyword_1(), null); 
    }
(
(
		lv_classname_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getRuleJavaWrapperAccess().getClassnameIDTerminalRuleCall_2_0(), "classname"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleJavaWrapperRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"classname",
	        		lv_classname_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'(' 
    {
        createLeafNode(grammarAccess.getRuleJavaWrapperAccess().getLeftParenthesisKeyword_3(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRuleJavaWrapperAccess().getConstructorParamsRulJava_paramParserRuleCall_4_0_0(), currentNode); 
	    }
		lv_constructorParams_4_0=rulerulJava_param		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleJavaWrapperRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"constructorParams",
	        		lv_constructorParams_4_0, 
	        		"rulJava_param", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getRuleJavaWrapperAccess().getCommaKeyword_4_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRuleJavaWrapperAccess().getConstructorParamsRulJava_paramParserRuleCall_4_1_1_0(), currentNode); 
	    }
		lv_constructorParams_6_0=rulerulJava_param		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleJavaWrapperRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"constructorParams",
	        		lv_constructorParams_6_0, 
	        		"rulJava_param", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	')' 
    {
        createLeafNode(grammarAccess.getRuleJavaWrapperAccess().getRightParenthesisKeyword_5(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getRuleJavaWrapperAccess().getLeftCurlyBracketKeyword_6(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRuleJavaWrapperAccess().getCommandsCommandParserRuleCall_7_0(), currentNode); 
	    }
		lv_commands_9_0=ruleCommand		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleJavaWrapperRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"commands",
	        		lv_commands_9_0, 
	        		"Command", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getRuleJavaWrapperAccess().getRightCurlyBracketKeyword_8(), null); 
    }
)
;





// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCommandRule(), currentNode); }
	 iv_ruleCommand=ruleCommand 
	 { $current=$iv_ruleCommand.current; } 
	 EOF 
;

// Rule Command
ruleCommand returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getCommandAccess().getEntryCommandParserRuleCall_0(), currentNode); 
    }
    this_entryCommand_0=ruleentryCommand
    { 
        $current = $this_entryCommand_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCommandAccess().getAssignCommandParserRuleCall_1(), currentNode); 
    }
    this_assignCommand_1=ruleassignCommand
    { 
        $current = $this_assignCommand_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleentryCommand
entryRuleentryCommand returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEntryCommandRule(), currentNode); }
	 iv_ruleentryCommand=ruleentryCommand 
	 { $current=$iv_ruleentryCommand.current; } 
	 EOF 
;

// Rule entryCommand
ruleentryCommand returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'JExecute' 
    {
        createLeafNode(grammarAccess.getEntryCommandAccess().getJExecuteKeyword_0(), null); 
    }
(
(
		lv_javaFunctionName_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getEntryCommandAccess().getJavaFunctionNameIDTerminalRuleCall_1_0(), "javaFunctionName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEntryCommandRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"javaFunctionName",
	        		lv_javaFunctionName_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'(' 
    {
        createLeafNode(grammarAccess.getEntryCommandAccess().getLeftParenthesisKeyword_2(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEntryCommandAccess().getCommandsRulJava_paramParserRuleCall_3_0_0(), currentNode); 
	    }
		lv_commands_3_0=rulerulJava_param		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEntryCommandRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"commands",
	        		lv_commands_3_0, 
	        		"rulJava_param", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getEntryCommandAccess().getCommaKeyword_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEntryCommandAccess().getCommandsRulJava_paramParserRuleCall_3_1_1_0(), currentNode); 
	    }
		lv_commands_5_0=rulerulJava_param		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEntryCommandRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"commands",
	        		lv_commands_5_0, 
	        		"rulJava_param", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	')' 
    {
        createLeafNode(grammarAccess.getEntryCommandAccess().getRightParenthesisKeyword_4(), null); 
    }
)
;





// Entry rule entryRulerulJava_param
entryRulerulJava_param returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRulJava_paramRule(), currentNode); }
	 iv_rulerulJava_param=rulerulJava_param 
	 { $current=$iv_rulerulJava_param.current; } 
	 EOF 
;

// Rule rulJava_param
rulerulJava_param returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getRulJava_paramAccess().getRulJava_paramStringParserRuleCall_0(), currentNode); 
    }
    this_rulJava_paramString_0=rulerulJava_paramString
    { 
        $current = $this_rulJava_paramString_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRulJava_paramAccess().getRulJava_paramIntParserRuleCall_1(), currentNode); 
    }
    this_rulJava_paramInt_1=rulerulJava_paramInt
    { 
        $current = $this_rulJava_paramInt_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRulJava_paramAccess().getRulJava_paraScriptParserRuleCall_2(), currentNode); 
    }
    this_rulJava_paraScript_2=rulerulJava_paraScript
    { 
        $current = $this_rulJava_paraScript_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRulerulJava_paramString
entryRulerulJava_paramString returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRulJava_paramStringRule(), currentNode); }
	 iv_rulerulJava_paramString=rulerulJava_paramString 
	 { $current=$iv_rulerulJava_paramString.current; } 
	 EOF 
;

// Rule rulJava_paramString
rulerulJava_paramString returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_stringValue_0_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getRulJava_paramStringAccess().getStringValueSTRINGTerminalRuleCall_0(), "stringValue"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRulJava_paramStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"stringValue",
	        		lv_stringValue_0_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRulerulJava_paramInt
entryRulerulJava_paramInt returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRulJava_paramIntRule(), currentNode); }
	 iv_rulerulJava_paramInt=rulerulJava_paramInt 
	 { $current=$iv_rulerulJava_paramInt.current; } 
	 EOF 
;

// Rule rulJava_paramInt
rulerulJava_paramInt returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_intValue_0_0=RULE_INT
		{
			createLeafNode(grammarAccess.getRulJava_paramIntAccess().getIntValueINTTerminalRuleCall_0(), "intValue"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRulJava_paramIntRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"intValue",
	        		lv_intValue_0_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRulerulJava_paraScript
entryRulerulJava_paraScript returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRulJava_paraScriptRule(), currentNode); }
	 iv_rulerulJava_paraScript=rulerulJava_paraScript 
	 { $current=$iv_rulerulJava_paraScript.current; } 
	 EOF 
;

// Rule rulJava_paraScript
rulerulJava_paraScript returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRulJava_paraScriptRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getRulJava_paraScriptAccess().getScriptparamValueScriptParamCrossReference_0(), "scriptparamValue"); 
	}

)
)
;





// Entry rule entryRuleassignCommand
entryRuleassignCommand returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAssignCommandRule(), currentNode); }
	 iv_ruleassignCommand=ruleassignCommand 
	 { $current=$iv_ruleassignCommand.current; } 
	 EOF 
;

// Rule assignCommand
ruleassignCommand returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getAssignCommandAccess().getAssignCommandAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getAssignCommandAccess().getAssignCommandAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'JAssign' 
    {
        createLeafNode(grammarAccess.getAssignCommandAccess().getJAssignKeyword_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignCommandRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getAssignCommandAccess().getScriptParamScriptParamCrossReference_2_0(), "scriptParam"); 
	}

)
)	'=' 
    {
        createLeafNode(grammarAccess.getAssignCommandAccess().getEqualsSignKeyword_3(), null); 
    }
(
(
		lv_javaFunctionName_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getAssignCommandAccess().getJavaFunctionNameIDTerminalRuleCall_4_0(), "javaFunctionName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignCommandRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"javaFunctionName",
	        		lv_javaFunctionName_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'(' 
    {
        createLeafNode(grammarAccess.getAssignCommandAccess().getLeftParenthesisKeyword_5(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAssignCommandAccess().getCommandsRulJava_paramParserRuleCall_6_0_0(), currentNode); 
	    }
		lv_commands_6_0=rulerulJava_param		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignCommandRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"commands",
	        		lv_commands_6_0, 
	        		"rulJava_param", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getAssignCommandAccess().getCommaKeyword_6_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAssignCommandAccess().getCommandsRulJava_paramParserRuleCall_6_1_1_0(), currentNode); 
	    }
		lv_commands_8_0=rulerulJava_param		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignCommandRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"commands",
	        		lv_commands_8_0, 
	        		"rulJava_param", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	')' 
    {
        createLeafNode(grammarAccess.getAssignCommandAccess().getRightParenthesisKeyword_7(), null); 
    }
)
;







// Entry rule entryRulerulSSH_commands
entryRulerulSSH_commands returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRulSSH_commandsRule(), currentNode); }
	 iv_rulerulSSH_commands=rulerulSSH_commands 
	 { $current=$iv_rulerulSSH_commands.current; } 
	 EOF 
;

// Rule rulSSH_commands
rulerulSSH_commands returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getRulSSH_commandsAccess().getRulSSH_commandsAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRulSSH_commandsAccess().getRulSSH_commandsAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_remoteCommand_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getRulSSH_commandsAccess().getRemoteCommandSTRINGTerminalRuleCall_1_0(), "remoteCommand"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRulSSH_commandsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"remoteCommand",
	        		lv_remoteCommand_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'<<' 
    {
        createLeafNode(grammarAccess.getRulSSH_commandsAccess().getLessThanSignLessThanSignKeyword_2_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRulSSH_commandsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getRulSSH_commandsAccess().getScriptparamsScriptParamCrossReference_2_1_0(), "scriptparams"); 
	}

)
)*	'>>' 
    {
        createLeafNode(grammarAccess.getRulSSH_commandsAccess().getGreaterThanSignGreaterThanSignKeyword_2_2(), null); 
    }
)?)
;





// Entry rule entryRuleruleHTTP
entryRuleruleHTTP returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRuleHTTPRule(), currentNode); }
	 iv_ruleruleHTTP=ruleruleHTTP 
	 { $current=$iv_ruleruleHTTP.current; } 
	 EOF 
;

// Rule ruleHTTP
ruleruleHTTP returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getRuleHTTPAccess().getRuleHTTPAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRuleHTTPAccess().getRuleHTTPAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'HTTP' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getHTTPKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
	'RemoteMachine' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getRemoteMachineKeyword_3(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getEqualsSignKeyword_4(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleHTTPRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getRuleHTTPAccess().getRemoteMachineScriptParamCrossReference_5_0(), "remoteMachine"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getSemicolonKeyword_6(), null); 
    }
	'HttpURL' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getHttpURLKeyword_7(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getEqualsSignKeyword_8(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRuleHTTPAccess().getHttpURLRuleHTTP_URLParserRuleCall_9_0(), currentNode); 
	    }
		lv_httpURL_9_0=ruleruleHTTP_URL		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleHTTPRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"httpURL",
	        		lv_httpURL_9_0, 
	        		"ruleHTTP_URL", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	';' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getSemicolonKeyword_10(), null); 
    }
	'HttpMethod' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getHttpMethodKeyword_11(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getEqualsSignKeyword_12(), null); 
    }
(
(
(
		lv_HMethod_13_1=	'GET' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getHMethodGETKeyword_13_0_0(), "HMethod"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleHTTPRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "HMethod", lv_HMethod_13_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_HMethod_13_2=	'POST' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getHMethodPOSTKeyword_13_0_1(), "HMethod"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleHTTPRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "HMethod", lv_HMethod_13_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getSemicolonKeyword_14(), null); 
    }
(	'HttpAuth' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getHttpAuthKeyword_15_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getLeftCurlyBracketKeyword_15_1(), null); 
    }
	'Method' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getMethodKeyword_15_2(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getEqualsSignKeyword_15_3(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleHTTPRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getRuleHTTPAccess().getAuthMethodScriptParamCrossReference_15_4_0(), "AuthMethod"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getSemicolonKeyword_15_5(), null); 
    }
	'AuthUsername' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getAuthUsernameKeyword_15_6(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getEqualsSignKeyword_15_7(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleHTTPRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getRuleHTTPAccess().getUsernameScriptParamCrossReference_15_8_0(), "username"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getSemicolonKeyword_15_9(), null); 
    }
	'AuthPassword' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getAuthPasswordKeyword_15_10(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getEqualsSignKeyword_15_11(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleHTTPRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getRuleHTTPAccess().getPasswordScriptParamCrossReference_15_12_0(), "password"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getSemicolonKeyword_15_13(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getRightCurlyBracketKeyword_15_14(), null); 
    }
)?(	'PostBody' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getPostBodyKeyword_16_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getEqualsSignKeyword_16_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleHTTPRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getRuleHTTPAccess().getPostBodyScriptParamCrossReference_16_2_0(), "postBody"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getSemicolonKeyword_16_3(), null); 
    }
)	'}' 
    {
        createLeafNode(grammarAccess.getRuleHTTPAccess().getRightCurlyBracketKeyword_17(), null); 
    }
)
;





// Entry rule entryRuleruleHTTP_URL
entryRuleruleHTTP_URL returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRuleHTTP_URLRule(), currentNode); }
	 iv_ruleruleHTTP_URL=ruleruleHTTP_URL 
	 { $current=$iv_ruleruleHTTP_URL.current; } 
	 EOF 
;

// Rule ruleHTTP_URL
ruleruleHTTP_URL returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getRuleHTTP_URLAccess().getRuleHTTP_URLAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRuleHTTP_URLAccess().getRuleHTTP_URLAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_remoteURL_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getRuleHTTP_URLAccess().getRemoteURLSTRINGTerminalRuleCall_1_0(), "remoteURL"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleHTTP_URLRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"remoteURL",
	        		lv_remoteURL_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'<<' 
    {
        createLeafNode(grammarAccess.getRuleHTTP_URLAccess().getLessThanSignLessThanSignKeyword_2_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleHTTP_URLRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getRuleHTTP_URLAccess().getScriptparamsScriptParamCrossReference_2_1_0(), "scriptparams"); 
	}

)
)*	'>>' 
    {
        createLeafNode(grammarAccess.getRuleHTTP_URLAccess().getGreaterThanSignGreaterThanSignKeyword_2_2(), null); 
    }
)?)
;





// Entry rule entryRuleruleXMLRPC
entryRuleruleXMLRPC returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRuleXMLRPCRule(), currentNode); }
	 iv_ruleruleXMLRPC=ruleruleXMLRPC 
	 { $current=$iv_ruleruleXMLRPC.current; } 
	 EOF 
;

// Rule ruleXMLRPC
ruleruleXMLRPC returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getRuleXMLRPCAccess().getRuleXMLRPCAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRuleXMLRPCAccess().getRuleXMLRPCAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'XML-RPC' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getXMLRPCKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
	'ServerURL' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getServerURLKeyword_3(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getEqualsSignKeyword_4(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleXMLRPCRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getRuleXMLRPCAccess().getRemoteMachineBindingParamCrossReference_5_0(), "remoteMachine"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getSemicolonKeyword_6(), null); 
    }
(	'HttpBasicAuth' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getHttpBasicAuthKeyword_7_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getLeftCurlyBracketKeyword_7_1(), null); 
    }
	'BasicAuthUsername' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getBasicAuthUsernameKeyword_7_2(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getEqualsSignKeyword_7_3(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleXMLRPCRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getRuleXMLRPCAccess().getUsernameBindingParamCrossReference_7_4_0(), "username"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getSemicolonKeyword_7_5(), null); 
    }
	'BasicAuthPassword' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getBasicAuthPasswordKeyword_7_6(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getEqualsSignKeyword_7_7(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleXMLRPCRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getRuleXMLRPCAccess().getPasswordBindingParamCrossReference_7_8_0(), "password"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getSemicolonKeyword_7_9(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getRightCurlyBracketKeyword_7_10(), null); 
    }
)?	'RPCMethod' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getRPCMethodKeyword_8(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getEqualsSignKeyword_9(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleXMLRPCRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getRuleXMLRPCAccess().getRPCMethodBindingParamCrossReference_10_0(), "RPCMethod"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getSemicolonKeyword_11(), null); 
    }
(	'parameters' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getParametersKeyword_12_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getEqualsSignKeyword_12_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRuleXMLRPCRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getRuleXMLRPCAccess().getURLparamsConfigurationParamCrossReference_12_2_0(), "URLparams"); 
	}

)
)*)?	'}' 
    {
        createLeafNode(grammarAccess.getRuleXMLRPCAccess().getRightCurlyBracketKeyword_13(), null); 
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


