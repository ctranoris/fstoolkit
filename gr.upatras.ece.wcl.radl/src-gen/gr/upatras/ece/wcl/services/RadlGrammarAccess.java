/*
* generated by Xtext
*/

package gr.upatras.ece.wcl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class RadlGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class RADLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RADL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Assignment cResourceAdapterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cResourceAdapterResourceAdapterParserRuleCall_1_0 = (RuleCall)cResourceAdapterAssignment_1.eContents().get(0);
		
		//RADL:
		//	imports=Import? resourceAdapter=ResourceAdapter;
		public ParserRule getRule() { return rule; }

		//imports=Import? resourceAdapter=ResourceAdapter
		public Group getGroup() { return cGroup; }

		//imports=Import?
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }

		//Import
		public RuleCall getImportsImportParserRuleCall_0_0() { return cImportsImportParserRuleCall_0_0; }

		//resourceAdapter=ResourceAdapter
		public Assignment getResourceAdapterAssignment_1() { return cResourceAdapterAssignment_1; }

		//ResourceAdapter
		public RuleCall getResourceAdapterResourceAdapterParserRuleCall_1_0() { return cResourceAdapterResourceAdapterParserRuleCall_1_0; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		
		//Import:
		//	"import service" importURI=STRING;
		public ParserRule getRule() { return rule; }

		//"import service" importURI=STRING
		public Group getGroup() { return cGroup; }

		//"import service"
		public Keyword getImportServiceKeyword_0() { return cImportServiceKeyword_0; }

		//importURI=STRING
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }

		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_1_0() { return cImportURISTRINGTerminalRuleCall_1_0; }
	}

	public class ResourceAdapterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ResourceAdapter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cResourceAdapterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cImplementsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cImplnameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cImplnameOfferedServiceCrossReference_2_1_0 = (CrossReference)cImplnameAssignment_2_1.eContents().get(0);
		private final RuleCall cImplnameOfferedServiceSTRINGTerminalRuleCall_2_1_0_1 = (RuleCall)cImplnameOfferedServiceCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cConfigurationParametersKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cConfParamsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cConfParamsConfigurationParamParserRuleCall_3_2_0 = (RuleCall)cConfParamsAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBindingParametersKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cBindParamsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cBindParamsBindingParamParserRuleCall_4_2_0 = (RuleCall)cBindParamsAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSupportedChildTypesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cChildParamsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cChildParamsSupportedChildTypeParserRuleCall_5_2_0 = (RuleCall)cChildParamsAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAllowedTypesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cAllowParamsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cAllowParamsAllowedTypeParserRuleCall_6_2_0 = (RuleCall)cAllowParamsAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cOnUpdateKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cProcessOnAllConfigurationParametersCompleteKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Keyword cEqualsSignKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Assignment cConfCompleteAssignment_7_4 = (Assignment)cGroup_7.eContents().get(4);
		private final Alternatives cConfCompleteAlternatives_7_4_0 = (Alternatives)cConfCompleteAssignment_7_4.eContents().get(0);
		private final Keyword cConfCompleteYESKeyword_7_4_0_0 = (Keyword)cConfCompleteAlternatives_7_4_0.eContents().get(0);
		private final Keyword cConfCompleteNOKeyword_7_4_0_1 = (Keyword)cConfCompleteAlternatives_7_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_7_5 = (Keyword)cGroup_7.eContents().get(5);
		private final Keyword cRAProtocolKeyword_7_6 = (Keyword)cGroup_7.eContents().get(6);
		private final Assignment cProtocolAssignment_7_7 = (Assignment)cGroup_7.eContents().get(7);
		private final RuleCall cProtocolProtocolParserRuleCall_7_7_0 = (RuleCall)cProtocolAssignment_7_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_8 = (Keyword)cGroup_7.eContents().get(8);
		
		//ResourceAdapter:
		//	"Resource Adapter" name=STRING ("implements" implname=[services::OfferedService|STRING])? ("Configuration Parameters"
		//	"{" confParams+=ConfigurationParam* "}")? ("Binding Parameters" "{" bindParams+=BindingParam* "}")?
		//	("Supported Child Types" "{" childParams+=SupportedChildType* "}")? ("Allowed Types" "{" allowParams+=AllowedType*
		//	"}")? ("On Update" "{" "ProcessOnAllConfigurationParametersComplete" "=" ConfComplete=("YES" | "NO") ";" "RAProtocol"
		//	protocol=Protocol "}")?;
		public ParserRule getRule() { return rule; }

		//"Resource Adapter" name=STRING ("implements" implname=[services::OfferedService|STRING])? ("Configuration Parameters"
		//"{" confParams+=ConfigurationParam* "}")? ("Binding Parameters" "{" bindParams+=BindingParam* "}")?
		//("Supported Child Types" "{" childParams+=SupportedChildType* "}")? ("Allowed Types" "{" allowParams+=AllowedType*
		//"}")? ("On Update" "{" "ProcessOnAllConfigurationParametersComplete" "=" ConfComplete=("YES" | "NO") ";" "RAProtocol"
		//protocol=Protocol "}")?
		public Group getGroup() { return cGroup; }

		//"Resource Adapter"
		public Keyword getResourceAdapterKeyword_0() { return cResourceAdapterKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//("implements" implname=[services::OfferedService|STRING])?
		public Group getGroup_2() { return cGroup_2; }

		//"implements"
		public Keyword getImplementsKeyword_2_0() { return cImplementsKeyword_2_0; }

		//implname=[services::OfferedService|STRING]
		public Assignment getImplnameAssignment_2_1() { return cImplnameAssignment_2_1; }

		//[services::OfferedService|STRING]
		public CrossReference getImplnameOfferedServiceCrossReference_2_1_0() { return cImplnameOfferedServiceCrossReference_2_1_0; }

		//STRING
		public RuleCall getImplnameOfferedServiceSTRINGTerminalRuleCall_2_1_0_1() { return cImplnameOfferedServiceSTRINGTerminalRuleCall_2_1_0_1; }

		//("Configuration Parameters" "{" confParams+=ConfigurationParam* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"Configuration Parameters"
		public Keyword getConfigurationParametersKeyword_3_0() { return cConfigurationParametersKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//confParams+=ConfigurationParam*
		public Assignment getConfParamsAssignment_3_2() { return cConfParamsAssignment_3_2; }

		//ConfigurationParam
		public RuleCall getConfParamsConfigurationParamParserRuleCall_3_2_0() { return cConfParamsConfigurationParamParserRuleCall_3_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }

		//("Binding Parameters" "{" bindParams+=BindingParam* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"Binding Parameters"
		public Keyword getBindingParametersKeyword_4_0() { return cBindingParametersKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//bindParams+=BindingParam*
		public Assignment getBindParamsAssignment_4_2() { return cBindParamsAssignment_4_2; }

		//BindingParam
		public RuleCall getBindParamsBindingParamParserRuleCall_4_2_0() { return cBindParamsBindingParamParserRuleCall_4_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }

		//("Supported Child Types" "{" childParams+=SupportedChildType* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"Supported Child Types"
		public Keyword getSupportedChildTypesKeyword_5_0() { return cSupportedChildTypesKeyword_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//childParams+=SupportedChildType*
		public Assignment getChildParamsAssignment_5_2() { return cChildParamsAssignment_5_2; }

		//SupportedChildType
		public RuleCall getChildParamsSupportedChildTypeParserRuleCall_5_2_0() { return cChildParamsSupportedChildTypeParserRuleCall_5_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }

		//("Allowed Types" "{" allowParams+=AllowedType* "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"Allowed Types"
		public Keyword getAllowedTypesKeyword_6_0() { return cAllowedTypesKeyword_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//allowParams+=AllowedType*
		public Assignment getAllowParamsAssignment_6_2() { return cAllowParamsAssignment_6_2; }

		//AllowedType
		public RuleCall getAllowParamsAllowedTypeParserRuleCall_6_2_0() { return cAllowParamsAllowedTypeParserRuleCall_6_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }

		//("On Update" "{" "ProcessOnAllConfigurationParametersComplete" "=" ConfComplete=("YES" | "NO") ";" "RAProtocol"
		//protocol=Protocol "}")?
		public Group getGroup_7() { return cGroup_7; }

		//"On Update"
		public Keyword getOnUpdateKeyword_7_0() { return cOnUpdateKeyword_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }

		//"ProcessOnAllConfigurationParametersComplete"
		public Keyword getProcessOnAllConfigurationParametersCompleteKeyword_7_2() { return cProcessOnAllConfigurationParametersCompleteKeyword_7_2; }

		//"="
		public Keyword getEqualsSignKeyword_7_3() { return cEqualsSignKeyword_7_3; }

		//ConfComplete=("YES" | "NO")
		public Assignment getConfCompleteAssignment_7_4() { return cConfCompleteAssignment_7_4; }

		//"YES" | "NO"
		public Alternatives getConfCompleteAlternatives_7_4_0() { return cConfCompleteAlternatives_7_4_0; }

		//"YES"
		public Keyword getConfCompleteYESKeyword_7_4_0_0() { return cConfCompleteYESKeyword_7_4_0_0; }

		//"NO"
		public Keyword getConfCompleteNOKeyword_7_4_0_1() { return cConfCompleteNOKeyword_7_4_0_1; }

		//";"
		public Keyword getSemicolonKeyword_7_5() { return cSemicolonKeyword_7_5; }

		//"RAProtocol"
		public Keyword getRAProtocolKeyword_7_6() { return cRAProtocolKeyword_7_6; }

		//protocol=Protocol
		public Assignment getProtocolAssignment_7_7() { return cProtocolAssignment_7_7; }

		//Protocol
		public RuleCall getProtocolProtocolParserRuleCall_7_7_0() { return cProtocolProtocolParserRuleCall_7_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7_8() { return cRightCurlyBracketKeyword_7_8; }
	}

	public class ConfigurationParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConfigurationParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfigurationParamAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cParamTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParamTypeParameterTypeParserRuleCall_1_0 = (RuleCall)cParamTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cNameAlternatives_2_0 = (Alternatives)cNameAssignment_2.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_2_0_0 = (RuleCall)cNameAlternatives_2_0.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0_1 = (RuleCall)cNameAlternatives_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDefValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDefValueSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDefValueAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cImplementsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cServsettingAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cServsettingServiceSettingCrossReference_4_1_0 = (CrossReference)cServsettingAssignment_4_1.eContents().get(0);
		private final RuleCall cServsettingServiceSettingSTRINGTerminalRuleCall_4_1_0_1 = (RuleCall)cServsettingServiceSettingCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDescriptionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cDescriptionValueAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDescriptionValueSTRINGTerminalRuleCall_5_2_0 = (RuleCall)cDescriptionValueAssignment_5_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ConfigurationParam:
		//	{ConfigurationParam} paramType=ParameterType? name=(ID | STRING) ("=" defValue=STRING)? ("implements"
		//	servsetting=[services::ServiceSetting|STRING])? ("description" "=" descriptionValue=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//{ConfigurationParam} paramType=ParameterType? name=(ID | STRING) ("=" defValue=STRING)? ("implements"
		//servsetting=[services::ServiceSetting|STRING])? ("description" "=" descriptionValue=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//{ConfigurationParam}
		public Action getConfigurationParamAction_0() { return cConfigurationParamAction_0; }

		//paramType=ParameterType?
		public Assignment getParamTypeAssignment_1() { return cParamTypeAssignment_1; }

		//ParameterType
		public RuleCall getParamTypeParameterTypeParserRuleCall_1_0() { return cParamTypeParameterTypeParserRuleCall_1_0; }

		//name=(ID | STRING)
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID | STRING
		public Alternatives getNameAlternatives_2_0() { return cNameAlternatives_2_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0_0() { return cNameIDTerminalRuleCall_2_0_0; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0_1() { return cNameSTRINGTerminalRuleCall_2_0_1; }

		//("=" defValue=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"="
		public Keyword getEqualsSignKeyword_3_0() { return cEqualsSignKeyword_3_0; }

		//defValue=STRING
		public Assignment getDefValueAssignment_3_1() { return cDefValueAssignment_3_1; }

		//STRING
		public RuleCall getDefValueSTRINGTerminalRuleCall_3_1_0() { return cDefValueSTRINGTerminalRuleCall_3_1_0; }

		//("implements" servsetting=[services::ServiceSetting|STRING])?
		public Group getGroup_4() { return cGroup_4; }

		//"implements"
		public Keyword getImplementsKeyword_4_0() { return cImplementsKeyword_4_0; }

		//servsetting=[services::ServiceSetting|STRING]
		public Assignment getServsettingAssignment_4_1() { return cServsettingAssignment_4_1; }

		//[services::ServiceSetting|STRING]
		public CrossReference getServsettingServiceSettingCrossReference_4_1_0() { return cServsettingServiceSettingCrossReference_4_1_0; }

		//STRING
		public RuleCall getServsettingServiceSettingSTRINGTerminalRuleCall_4_1_0_1() { return cServsettingServiceSettingSTRINGTerminalRuleCall_4_1_0_1; }

		//("description" "=" descriptionValue=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//"description"
		public Keyword getDescriptionKeyword_5_0() { return cDescriptionKeyword_5_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }

		//descriptionValue=STRING
		public Assignment getDescriptionValueAssignment_5_2() { return cDescriptionValueAssignment_5_2; }

		//STRING
		public RuleCall getDescriptionValueSTRINGTerminalRuleCall_5_2_0() { return cDescriptionValueSTRINGTerminalRuleCall_5_2_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class BindingParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BindingParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBindingParamAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cParamTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParamTypeParameterTypeParserRuleCall_1_0 = (RuleCall)cParamTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cNameAlternatives_2_0 = (Alternatives)cNameAssignment_2.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_2_0_0 = (RuleCall)cNameAlternatives_2_0.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0_1 = (RuleCall)cNameAlternatives_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDefValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDefValueSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDefValueAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cDescriptionValueAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cDescriptionValueSTRINGTerminalRuleCall_4_2_0 = (RuleCall)cDescriptionValueAssignment_4_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//BindingParam:
		//	{BindingParam} paramType=ParameterType? name=(ID | STRING) ("=" defValue=STRING)? ("description" "="
		//	descriptionValue=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//{BindingParam} paramType=ParameterType? name=(ID | STRING) ("=" defValue=STRING)? ("description" "="
		//descriptionValue=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//{BindingParam}
		public Action getBindingParamAction_0() { return cBindingParamAction_0; }

		//paramType=ParameterType?
		public Assignment getParamTypeAssignment_1() { return cParamTypeAssignment_1; }

		//ParameterType
		public RuleCall getParamTypeParameterTypeParserRuleCall_1_0() { return cParamTypeParameterTypeParserRuleCall_1_0; }

		//name=(ID | STRING)
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID | STRING
		public Alternatives getNameAlternatives_2_0() { return cNameAlternatives_2_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0_0() { return cNameIDTerminalRuleCall_2_0_0; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0_1() { return cNameSTRINGTerminalRuleCall_2_0_1; }

		//("=" defValue=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"="
		public Keyword getEqualsSignKeyword_3_0() { return cEqualsSignKeyword_3_0; }

		//defValue=STRING
		public Assignment getDefValueAssignment_3_1() { return cDefValueAssignment_3_1; }

		//STRING
		public RuleCall getDefValueSTRINGTerminalRuleCall_3_1_0() { return cDefValueSTRINGTerminalRuleCall_3_1_0; }

		//("description" "=" descriptionValue=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"description"
		public Keyword getDescriptionKeyword_4_0() { return cDescriptionKeyword_4_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }

		//descriptionValue=STRING
		public Assignment getDescriptionValueAssignment_4_2() { return cDescriptionValueAssignment_4_2; }

		//STRING
		public RuleCall getDescriptionValueSTRINGTerminalRuleCall_4_2_0() { return cDescriptionValueSTRINGTerminalRuleCall_4_2_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class SupportedChildTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SupportedChildType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSupportedChildTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cParamTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParamTypeParameterTypeParserRuleCall_1_0 = (RuleCall)cParamTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cNameAlternatives_2_0 = (Alternatives)cNameAssignment_2.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_2_0_0 = (RuleCall)cNameAlternatives_2_0.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0_1 = (RuleCall)cNameAlternatives_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDefValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDefValueSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDefValueAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SupportedChildType:
		//	{SupportedChildType} paramType=ParameterType? name=(ID | STRING) ("=" defValue=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//{SupportedChildType} paramType=ParameterType? name=(ID | STRING) ("=" defValue=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//{SupportedChildType}
		public Action getSupportedChildTypeAction_0() { return cSupportedChildTypeAction_0; }

		//paramType=ParameterType?
		public Assignment getParamTypeAssignment_1() { return cParamTypeAssignment_1; }

		//ParameterType
		public RuleCall getParamTypeParameterTypeParserRuleCall_1_0() { return cParamTypeParameterTypeParserRuleCall_1_0; }

		//name=(ID | STRING)
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID | STRING
		public Alternatives getNameAlternatives_2_0() { return cNameAlternatives_2_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0_0() { return cNameIDTerminalRuleCall_2_0_0; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0_1() { return cNameSTRINGTerminalRuleCall_2_0_1; }

		//("=" defValue=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"="
		public Keyword getEqualsSignKeyword_3_0() { return cEqualsSignKeyword_3_0; }

		//defValue=STRING
		public Assignment getDefValueAssignment_3_1() { return cDefValueAssignment_3_1; }

		//STRING
		public RuleCall getDefValueSTRINGTerminalRuleCall_3_1_0() { return cDefValueSTRINGTerminalRuleCall_3_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class AllowedTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AllowedType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAllowedTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cParamTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParamTypeParameterTypeParserRuleCall_1_0 = (RuleCall)cParamTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cNameAlternatives_2_0 = (Alternatives)cNameAssignment_2.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_2_0_0 = (RuleCall)cNameAlternatives_2_0.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0_1 = (RuleCall)cNameAlternatives_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDefValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDefValueSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDefValueAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AllowedType:
		//	{AllowedType} paramType=ParameterType? name=(ID | STRING) ("=" defValue=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//{AllowedType} paramType=ParameterType? name=(ID | STRING) ("=" defValue=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//{AllowedType}
		public Action getAllowedTypeAction_0() { return cAllowedTypeAction_0; }

		//paramType=ParameterType?
		public Assignment getParamTypeAssignment_1() { return cParamTypeAssignment_1; }

		//ParameterType
		public RuleCall getParamTypeParameterTypeParserRuleCall_1_0() { return cParamTypeParameterTypeParserRuleCall_1_0; }

		//name=(ID | STRING)
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID | STRING
		public Alternatives getNameAlternatives_2_0() { return cNameAlternatives_2_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0_0() { return cNameIDTerminalRuleCall_2_0_0; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0_1() { return cNameSTRINGTerminalRuleCall_2_0_1; }

		//("=" defValue=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"="
		public Keyword getEqualsSignKeyword_3_0() { return cEqualsSignKeyword_3_0; }

		//defValue=STRING
		public Assignment getDefValueAssignment_3_1() { return cDefValueAssignment_3_1; }

		//STRING
		public RuleCall getDefValueSTRINGTerminalRuleCall_3_1_0() { return cDefValueSTRINGTerminalRuleCall_3_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class ProtocolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Protocol");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRuleSSHParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRuleHTTPParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRuleXMLRPCParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRuleJavaWrapperParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Protocol:
		//	ruleSSH | ruleHTTP | ruleXMLRPC | ruleJavaWrapper;
		public ParserRule getRule() { return rule; }

		//ruleSSH | ruleHTTP | ruleXMLRPC | ruleJavaWrapper
		public Alternatives getAlternatives() { return cAlternatives; }

		//ruleSSH
		public RuleCall getRuleSSHParserRuleCall_0() { return cRuleSSHParserRuleCall_0; }

		//ruleHTTP
		public RuleCall getRuleHTTPParserRuleCall_1() { return cRuleHTTPParserRuleCall_1; }

		//ruleXMLRPC
		public RuleCall getRuleXMLRPCParserRuleCall_2() { return cRuleXMLRPCParserRuleCall_2; }

		//ruleJavaWrapper
		public RuleCall getRuleJavaWrapperParserRuleCall_3() { return cRuleJavaWrapperParserRuleCall_3; }
	}

	public class ParameterTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParameterType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cPNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cPNameAlternatives_1_0 = (Alternatives)cPNameAssignment_1.eContents().get(0);
		private final Keyword cPNameStringKeyword_1_0_0 = (Keyword)cPNameAlternatives_1_0.eContents().get(0);
		private final Keyword cPNameIntegerKeyword_1_0_1 = (Keyword)cPNameAlternatives_1_0.eContents().get(1);
		private final Keyword cPNameBooleanKeyword_1_0_2 = (Keyword)cPNameAlternatives_1_0.eContents().get(2);
		private final Keyword cPNameEnumKeyword_1_0_3 = (Keyword)cPNameAlternatives_1_0.eContents().get(3);
		private final Keyword cPNameREFERENCEKeyword_1_0_4 = (Keyword)cPNameAlternatives_1_0.eContents().get(4);
		
		//ParameterType:
		//	{ParameterType} pName=("String" | "Integer" | "Boolean" | "Enum" | "REFERENCE");
		public ParserRule getRule() { return rule; }

		//{ParameterType} pName=("String" | "Integer" | "Boolean" | "Enum" | "REFERENCE")
		public Group getGroup() { return cGroup; }

		//{ParameterType}
		public Action getParameterTypeAction_0() { return cParameterTypeAction_0; }

		//pName=("String" | "Integer" | "Boolean" | "Enum" | "REFERENCE")
		public Assignment getPNameAssignment_1() { return cPNameAssignment_1; }

		//"String" | "Integer" | "Boolean" | "Enum" | "REFERENCE"
		public Alternatives getPNameAlternatives_1_0() { return cPNameAlternatives_1_0; }

		//"String"
		public Keyword getPNameStringKeyword_1_0_0() { return cPNameStringKeyword_1_0_0; }

		//"Integer"
		public Keyword getPNameIntegerKeyword_1_0_1() { return cPNameIntegerKeyword_1_0_1; }

		//"Boolean"
		public Keyword getPNameBooleanKeyword_1_0_2() { return cPNameBooleanKeyword_1_0_2; }

		//"Enum"
		public Keyword getPNameEnumKeyword_1_0_3() { return cPNameEnumKeyword_1_0_3; }

		//"REFERENCE"
		public Keyword getPNameREFERENCEKeyword_1_0_4() { return cPNameREFERENCEKeyword_1_0_4; }
	}

	public class RuleSSHElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ruleSSH");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRuleSSHAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSSHKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRemoteMachineKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRemoteMachineAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cRemoteMachineScriptParamCrossReference_5_0 = (CrossReference)cRemoteMachineAssignment_5.eContents().get(0);
		private final RuleCall cRemoteMachineScriptParamSTRINGTerminalRuleCall_5_0_1 = (RuleCall)cRemoteMachineScriptParamCrossReference_5_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRPortKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cEqualsSignKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cRPortAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cRPortScriptParamCrossReference_9_0 = (CrossReference)cRPortAssignment_9.eContents().get(0);
		private final RuleCall cRPortScriptParamSTRINGTerminalRuleCall_9_0_1 = (RuleCall)cRPortScriptParamCrossReference_9_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRUsernameKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cEqualsSignKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cUsernameAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final CrossReference cUsernameScriptParamCrossReference_13_0 = (CrossReference)cUsernameAssignment_13.eContents().get(0);
		private final RuleCall cUsernameScriptParamSTRINGTerminalRuleCall_13_0_1 = (RuleCall)cUsernameScriptParamCrossReference_13_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cRPasswordKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cEqualsSignKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cPasswordAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final CrossReference cPasswordScriptParamCrossReference_17_0 = (CrossReference)cPasswordAssignment_17.eContents().get(0);
		private final RuleCall cPasswordScriptParamSTRINGTerminalRuleCall_17_0_1 = (RuleCall)cPasswordScriptParamCrossReference_17_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cRExecuteKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cLeftCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Assignment cCommandsAssignment_21 = (Assignment)cGroup.eContents().get(21);
		private final RuleCall cCommandsRulSSH_commandsParserRuleCall_21_0 = (RuleCall)cCommandsAssignment_21.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Keyword cRExecuteDeleteKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Keyword cLeftCurlyBracketKeyword_24 = (Keyword)cGroup.eContents().get(24);
		private final Assignment cCommandsDeleteAssignment_25 = (Assignment)cGroup.eContents().get(25);
		private final RuleCall cCommandsDeleteRulSSH_commandsParserRuleCall_25_0 = (RuleCall)cCommandsDeleteAssignment_25.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_26 = (Keyword)cGroup.eContents().get(26);
		private final Keyword cRightCurlyBracketKeyword_27 = (Keyword)cGroup.eContents().get(27);
		
		//ruleSSH:
		//	{ruleSSH} "SSH" "{" "Remote Machine" "=" remoteMachine=[scriptParam|STRING] ";" "RPort" "=" RPort=[scriptParam|STRING]
		//	";" "RUsername" "=" username=[scriptParam|STRING] ";" "RPassword" "=" password=[scriptParam|STRING] ";" "RExecute" "{"
		//	commands+=rulSSH_commands* "}" "RExecuteDelete" "{" commandsDelete+=rulSSH_commands* "}" "}";
		public ParserRule getRule() { return rule; }

		//{ruleSSH} "SSH" "{" "Remote Machine" "=" remoteMachine=[scriptParam|STRING] ";" "RPort" "=" RPort=[scriptParam|STRING]
		//";" "RUsername" "=" username=[scriptParam|STRING] ";" "RPassword" "=" password=[scriptParam|STRING] ";" "RExecute" "{"
		//commands+=rulSSH_commands* "}" "RExecuteDelete" "{" commandsDelete+=rulSSH_commands* "}" "}"
		public Group getGroup() { return cGroup; }

		//{ruleSSH}
		public Action getRuleSSHAction_0() { return cRuleSSHAction_0; }

		//"SSH"
		public Keyword getSSHKeyword_1() { return cSSHKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"Remote Machine"
		public Keyword getRemoteMachineKeyword_3() { return cRemoteMachineKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//remoteMachine=[scriptParam|STRING]
		public Assignment getRemoteMachineAssignment_5() { return cRemoteMachineAssignment_5; }

		//[scriptParam|STRING]
		public CrossReference getRemoteMachineScriptParamCrossReference_5_0() { return cRemoteMachineScriptParamCrossReference_5_0; }

		//STRING
		public RuleCall getRemoteMachineScriptParamSTRINGTerminalRuleCall_5_0_1() { return cRemoteMachineScriptParamSTRINGTerminalRuleCall_5_0_1; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }

		//"RPort"
		public Keyword getRPortKeyword_7() { return cRPortKeyword_7; }

		//"="
		public Keyword getEqualsSignKeyword_8() { return cEqualsSignKeyword_8; }

		//RPort=[scriptParam|STRING]
		public Assignment getRPortAssignment_9() { return cRPortAssignment_9; }

		//[scriptParam|STRING]
		public CrossReference getRPortScriptParamCrossReference_9_0() { return cRPortScriptParamCrossReference_9_0; }

		//STRING
		public RuleCall getRPortScriptParamSTRINGTerminalRuleCall_9_0_1() { return cRPortScriptParamSTRINGTerminalRuleCall_9_0_1; }

		//";"
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }

		//"RUsername"
		public Keyword getRUsernameKeyword_11() { return cRUsernameKeyword_11; }

		//"="
		public Keyword getEqualsSignKeyword_12() { return cEqualsSignKeyword_12; }

		//username=[scriptParam|STRING]
		public Assignment getUsernameAssignment_13() { return cUsernameAssignment_13; }

		//[scriptParam|STRING]
		public CrossReference getUsernameScriptParamCrossReference_13_0() { return cUsernameScriptParamCrossReference_13_0; }

		//STRING
		public RuleCall getUsernameScriptParamSTRINGTerminalRuleCall_13_0_1() { return cUsernameScriptParamSTRINGTerminalRuleCall_13_0_1; }

		//";"
		public Keyword getSemicolonKeyword_14() { return cSemicolonKeyword_14; }

		//"RPassword"
		public Keyword getRPasswordKeyword_15() { return cRPasswordKeyword_15; }

		//"="
		public Keyword getEqualsSignKeyword_16() { return cEqualsSignKeyword_16; }

		//password=[scriptParam|STRING]
		public Assignment getPasswordAssignment_17() { return cPasswordAssignment_17; }

		//[scriptParam|STRING]
		public CrossReference getPasswordScriptParamCrossReference_17_0() { return cPasswordScriptParamCrossReference_17_0; }

		//STRING
		public RuleCall getPasswordScriptParamSTRINGTerminalRuleCall_17_0_1() { return cPasswordScriptParamSTRINGTerminalRuleCall_17_0_1; }

		//";"
		public Keyword getSemicolonKeyword_18() { return cSemicolonKeyword_18; }

		//"RExecute"
		public Keyword getRExecuteKeyword_19() { return cRExecuteKeyword_19; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_20() { return cLeftCurlyBracketKeyword_20; }

		//commands+=rulSSH_commands*
		public Assignment getCommandsAssignment_21() { return cCommandsAssignment_21; }

		//rulSSH_commands
		public RuleCall getCommandsRulSSH_commandsParserRuleCall_21_0() { return cCommandsRulSSH_commandsParserRuleCall_21_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_22() { return cRightCurlyBracketKeyword_22; }

		//"RExecuteDelete"
		public Keyword getRExecuteDeleteKeyword_23() { return cRExecuteDeleteKeyword_23; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_24() { return cLeftCurlyBracketKeyword_24; }

		//commandsDelete+=rulSSH_commands*
		public Assignment getCommandsDeleteAssignment_25() { return cCommandsDeleteAssignment_25; }

		//rulSSH_commands
		public RuleCall getCommandsDeleteRulSSH_commandsParserRuleCall_25_0() { return cCommandsDeleteRulSSH_commandsParserRuleCall_25_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_26() { return cRightCurlyBracketKeyword_26; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_27() { return cRightCurlyBracketKeyword_27; }
	}

	public class RuleJavaWrapperElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ruleJavaWrapper");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRuleJavaWrapperAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cJavaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cClassnameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cClassnameIDTerminalRuleCall_2_0 = (RuleCall)cClassnameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cConstructorParamsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cConstructorParamsRulJava_paramParserRuleCall_4_0_0 = (RuleCall)cConstructorParamsAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cConstructorParamsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cConstructorParamsRulJava_paramParserRuleCall_4_1_1_0 = (RuleCall)cConstructorParamsAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cCommandsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cCommandsCommandParserRuleCall_7_0 = (RuleCall)cCommandsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ruleJavaWrapper:
		//	{ruleJavaWrapper} "Java" classname=ID "(" (constructorParams+=rulJava_param ("," constructorParams+=rulJava_param)*)?
		//	")" "{" commands+=Command* "}";
		public ParserRule getRule() { return rule; }

		//{ruleJavaWrapper} "Java" classname=ID "(" (constructorParams+=rulJava_param ("," constructorParams+=rulJava_param)*)?
		//")" "{" commands+=Command* "}"
		public Group getGroup() { return cGroup; }

		//{ruleJavaWrapper}
		public Action getRuleJavaWrapperAction_0() { return cRuleJavaWrapperAction_0; }

		//"Java"
		public Keyword getJavaKeyword_1() { return cJavaKeyword_1; }

		//classname=ID
		public Assignment getClassnameAssignment_2() { return cClassnameAssignment_2; }

		//ID
		public RuleCall getClassnameIDTerminalRuleCall_2_0() { return cClassnameIDTerminalRuleCall_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//(constructorParams+=rulJava_param ("," constructorParams+=rulJava_param)*)?
		public Group getGroup_4() { return cGroup_4; }

		//constructorParams+=rulJava_param
		public Assignment getConstructorParamsAssignment_4_0() { return cConstructorParamsAssignment_4_0; }

		//rulJava_param
		public RuleCall getConstructorParamsRulJava_paramParserRuleCall_4_0_0() { return cConstructorParamsRulJava_paramParserRuleCall_4_0_0; }

		//("," constructorParams+=rulJava_param)*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }

		//constructorParams+=rulJava_param
		public Assignment getConstructorParamsAssignment_4_1_1() { return cConstructorParamsAssignment_4_1_1; }

		//rulJava_param
		public RuleCall getConstructorParamsRulJava_paramParserRuleCall_4_1_1_0() { return cConstructorParamsRulJava_paramParserRuleCall_4_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//commands+=Command*
		public Assignment getCommandsAssignment_7() { return cCommandsAssignment_7; }

		//Command
		public RuleCall getCommandsCommandParserRuleCall_7_0() { return cCommandsCommandParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class CommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Command");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEntryCommandParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAssignCommandParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Command:
		//	entryCommand | assignCommand;
		public ParserRule getRule() { return rule; }

		//entryCommand | assignCommand
		public Alternatives getAlternatives() { return cAlternatives; }

		//entryCommand
		public RuleCall getEntryCommandParserRuleCall_0() { return cEntryCommandParserRuleCall_0; }

		//assignCommand
		public RuleCall getAssignCommandParserRuleCall_1() { return cAssignCommandParserRuleCall_1; }
	}

	public class EntryCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "entryCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJExecuteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cJavaFunctionNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cJavaFunctionNameIDTerminalRuleCall_1_0 = (RuleCall)cJavaFunctionNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cCommandsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cCommandsRulJava_paramParserRuleCall_3_0_0 = (RuleCall)cCommandsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cCommandsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cCommandsRulJava_paramParserRuleCall_3_1_1_0 = (RuleCall)cCommandsAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//entryCommand:
		//	"JExecute" javaFunctionName=ID "(" (commands+=rulJava_param ("," commands+=rulJava_param)*)? ")";
		public ParserRule getRule() { return rule; }

		//"JExecute" javaFunctionName=ID "(" (commands+=rulJava_param ("," commands+=rulJava_param)*)? ")"
		public Group getGroup() { return cGroup; }

		//"JExecute"
		public Keyword getJExecuteKeyword_0() { return cJExecuteKeyword_0; }

		//javaFunctionName=ID
		public Assignment getJavaFunctionNameAssignment_1() { return cJavaFunctionNameAssignment_1; }

		//ID
		public RuleCall getJavaFunctionNameIDTerminalRuleCall_1_0() { return cJavaFunctionNameIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(commands+=rulJava_param ("," commands+=rulJava_param)*)?
		public Group getGroup_3() { return cGroup_3; }

		//commands+=rulJava_param
		public Assignment getCommandsAssignment_3_0() { return cCommandsAssignment_3_0; }

		//rulJava_param
		public RuleCall getCommandsRulJava_paramParserRuleCall_3_0_0() { return cCommandsRulJava_paramParserRuleCall_3_0_0; }

		//("," commands+=rulJava_param)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//commands+=rulJava_param
		public Assignment getCommandsAssignment_3_1_1() { return cCommandsAssignment_3_1_1; }

		//rulJava_param
		public RuleCall getCommandsRulJava_paramParserRuleCall_3_1_1_0() { return cCommandsRulJava_paramParserRuleCall_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class RulJava_paramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "rulJava_param");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRulJava_paramStringParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRulJava_paramIntParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRulJava_paraScriptParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//rulJava_param:
		//	rulJava_paramString | rulJava_paramInt | rulJava_paraScript;
		public ParserRule getRule() { return rule; }

		//rulJava_paramString | rulJava_paramInt | rulJava_paraScript
		public Alternatives getAlternatives() { return cAlternatives; }

		//rulJava_paramString
		public RuleCall getRulJava_paramStringParserRuleCall_0() { return cRulJava_paramStringParserRuleCall_0; }

		//rulJava_paramInt
		public RuleCall getRulJava_paramIntParserRuleCall_1() { return cRulJava_paramIntParserRuleCall_1; }

		//rulJava_paraScript
		public RuleCall getRulJava_paraScriptParserRuleCall_2() { return cRulJava_paraScriptParserRuleCall_2; }
	}

	public class RulJava_paramStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "rulJava_paramString");
		private final Assignment cStringValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cStringValueSTRINGTerminalRuleCall_0 = (RuleCall)cStringValueAssignment.eContents().get(0);
		
		//rulJava_paramString:
		//	stringValue=STRING;
		public ParserRule getRule() { return rule; }

		//stringValue=STRING
		public Assignment getStringValueAssignment() { return cStringValueAssignment; }

		//STRING
		public RuleCall getStringValueSTRINGTerminalRuleCall_0() { return cStringValueSTRINGTerminalRuleCall_0; }
	}

	public class RulJava_paramIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "rulJava_paramInt");
		private final Assignment cIntValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIntValueINTTerminalRuleCall_0 = (RuleCall)cIntValueAssignment.eContents().get(0);
		
		//rulJava_paramInt:
		//	intValue=INT;
		public ParserRule getRule() { return rule; }

		//intValue=INT
		public Assignment getIntValueAssignment() { return cIntValueAssignment; }

		//INT
		public RuleCall getIntValueINTTerminalRuleCall_0() { return cIntValueINTTerminalRuleCall_0; }
	}

	public class RulJava_paraScriptElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "rulJava_paraScript");
		private final Assignment cScriptparamValueAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cScriptparamValueScriptParamCrossReference_0 = (CrossReference)cScriptparamValueAssignment.eContents().get(0);
		private final RuleCall cScriptparamValueScriptParamIDTerminalRuleCall_0_1 = (RuleCall)cScriptparamValueScriptParamCrossReference_0.eContents().get(1);
		
		//rulJava_paraScript:
		//	scriptparamValue=[scriptParam];
		public ParserRule getRule() { return rule; }

		//scriptparamValue=[scriptParam]
		public Assignment getScriptparamValueAssignment() { return cScriptparamValueAssignment; }

		//[scriptParam]
		public CrossReference getScriptparamValueScriptParamCrossReference_0() { return cScriptparamValueScriptParamCrossReference_0; }

		//ID
		public RuleCall getScriptparamValueScriptParamIDTerminalRuleCall_0_1() { return cScriptparamValueScriptParamIDTerminalRuleCall_0_1; }
	}

	public class AssignCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAssignCommandAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cJAssignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cScriptParamAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cScriptParamScriptParamCrossReference_2_0 = (CrossReference)cScriptParamAssignment_2.eContents().get(0);
		private final RuleCall cScriptParamScriptParamIDTerminalRuleCall_2_0_1 = (RuleCall)cScriptParamScriptParamCrossReference_2_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cJavaFunctionNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cJavaFunctionNameIDTerminalRuleCall_4_0 = (RuleCall)cJavaFunctionNameAssignment_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cCommandsAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cCommandsRulJava_paramParserRuleCall_6_0_0 = (RuleCall)cCommandsAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cCommaKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cCommandsAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cCommandsRulJava_paramParserRuleCall_6_1_1_0 = (RuleCall)cCommandsAssignment_6_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//assignCommand:
		//	{assignCommand} "JAssign" scriptParam=[scriptParam] "=" javaFunctionName=ID "(" (commands+=rulJava_param (","
		//	commands+=rulJava_param)*)? ")";
		public ParserRule getRule() { return rule; }

		//{assignCommand} "JAssign" scriptParam=[scriptParam] "=" javaFunctionName=ID "(" (commands+=rulJava_param (","
		//commands+=rulJava_param)*)? ")"
		public Group getGroup() { return cGroup; }

		//{assignCommand}
		public Action getAssignCommandAction_0() { return cAssignCommandAction_0; }

		//"JAssign"
		public Keyword getJAssignKeyword_1() { return cJAssignKeyword_1; }

		//scriptParam=[scriptParam]
		public Assignment getScriptParamAssignment_2() { return cScriptParamAssignment_2; }

		//[scriptParam]
		public CrossReference getScriptParamScriptParamCrossReference_2_0() { return cScriptParamScriptParamCrossReference_2_0; }

		//ID
		public RuleCall getScriptParamScriptParamIDTerminalRuleCall_2_0_1() { return cScriptParamScriptParamIDTerminalRuleCall_2_0_1; }

		//"="
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }

		//javaFunctionName=ID
		public Assignment getJavaFunctionNameAssignment_4() { return cJavaFunctionNameAssignment_4; }

		//ID
		public RuleCall getJavaFunctionNameIDTerminalRuleCall_4_0() { return cJavaFunctionNameIDTerminalRuleCall_4_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }

		//(commands+=rulJava_param ("," commands+=rulJava_param)*)?
		public Group getGroup_6() { return cGroup_6; }

		//commands+=rulJava_param
		public Assignment getCommandsAssignment_6_0() { return cCommandsAssignment_6_0; }

		//rulJava_param
		public RuleCall getCommandsRulJava_paramParserRuleCall_6_0_0() { return cCommandsRulJava_paramParserRuleCall_6_0_0; }

		//("," commands+=rulJava_param)*
		public Group getGroup_6_1() { return cGroup_6_1; }

		//","
		public Keyword getCommaKeyword_6_1_0() { return cCommaKeyword_6_1_0; }

		//commands+=rulJava_param
		public Assignment getCommandsAssignment_6_1_1() { return cCommandsAssignment_6_1_1; }

		//rulJava_param
		public RuleCall getCommandsRulJava_paramParserRuleCall_6_1_1_0() { return cCommandsRulJava_paramParserRuleCall_6_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}

	public class ScriptParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "scriptParam");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConfigurationParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBindingParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////ruleSSH_File returns ruleSSH_File:
		////{ruleSSH_File}
		////	'Remote Script' '=' remoteScript=STRING
		////	('parameters' '=' (scriptparams+=[ConfigurationParam | STRING])*  )? 
		////;
		//scriptParam:
		//	ConfigurationParam | BindingParam;
		public ParserRule getRule() { return rule; }

		//ConfigurationParam | BindingParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//ConfigurationParam
		public RuleCall getConfigurationParamParserRuleCall_0() { return cConfigurationParamParserRuleCall_0; }

		//BindingParam
		public RuleCall getBindingParamParserRuleCall_1() { return cBindingParamParserRuleCall_1; }
	}

	public class RulSSH_commandsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "rulSSH_commands");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRulSSH_commandsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cRemoteCommandAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRemoteCommandSTRINGTerminalRuleCall_1_0 = (RuleCall)cRemoteCommandAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLessThanSignLessThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cScriptparamsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cScriptparamsScriptParamCrossReference_2_1_0 = (CrossReference)cScriptparamsAssignment_2_1.eContents().get(0);
		private final RuleCall cScriptparamsScriptParamSTRINGTerminalRuleCall_2_1_0_1 = (RuleCall)cScriptparamsScriptParamCrossReference_2_1_0.eContents().get(1);
		private final Keyword cGreaterThanSignGreaterThanSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//rulSSH_commands:
		//	{rulSSH_commands} remoteCommand=STRING ("<<" scriptparams+=[scriptParam|STRING]* ">>")?;
		public ParserRule getRule() { return rule; }

		//{rulSSH_commands} remoteCommand=STRING ("<<" scriptparams+=[scriptParam|STRING]* ">>")?
		public Group getGroup() { return cGroup; }

		//{rulSSH_commands}
		public Action getRulSSH_commandsAction_0() { return cRulSSH_commandsAction_0; }

		//remoteCommand=STRING
		public Assignment getRemoteCommandAssignment_1() { return cRemoteCommandAssignment_1; }

		//STRING
		public RuleCall getRemoteCommandSTRINGTerminalRuleCall_1_0() { return cRemoteCommandSTRINGTerminalRuleCall_1_0; }

		//("<<" scriptparams+=[scriptParam|STRING]* ">>")?
		public Group getGroup_2() { return cGroup_2; }

		//"<<"
		public Keyword getLessThanSignLessThanSignKeyword_2_0() { return cLessThanSignLessThanSignKeyword_2_0; }

		//scriptparams+=[scriptParam|STRING]*
		public Assignment getScriptparamsAssignment_2_1() { return cScriptparamsAssignment_2_1; }

		//[scriptParam|STRING]
		public CrossReference getScriptparamsScriptParamCrossReference_2_1_0() { return cScriptparamsScriptParamCrossReference_2_1_0; }

		//STRING
		public RuleCall getScriptparamsScriptParamSTRINGTerminalRuleCall_2_1_0_1() { return cScriptparamsScriptParamSTRINGTerminalRuleCall_2_1_0_1; }

		//">>"
		public Keyword getGreaterThanSignGreaterThanSignKeyword_2_2() { return cGreaterThanSignGreaterThanSignKeyword_2_2; }
	}

	public class RuleHTTPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ruleHTTP");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRuleHTTPAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHTTPKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRemoteMachineKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRemoteMachineAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cRemoteMachineScriptParamCrossReference_5_0 = (CrossReference)cRemoteMachineAssignment_5.eContents().get(0);
		private final RuleCall cRemoteMachineScriptParamSTRINGTerminalRuleCall_5_0_1 = (RuleCall)cRemoteMachineScriptParamCrossReference_5_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cHttpURLKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cEqualsSignKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cHttpURLAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cHttpURLRuleHTTP_URLParserRuleCall_9_0 = (RuleCall)cHttpURLAssignment_9.eContents().get(0);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cHttpMethodKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cEqualsSignKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cHMethodAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final Alternatives cHMethodAlternatives_13_0 = (Alternatives)cHMethodAssignment_13.eContents().get(0);
		private final Keyword cHMethodGETKeyword_13_0_0 = (Keyword)cHMethodAlternatives_13_0.eContents().get(0);
		private final Keyword cHMethodPOSTKeyword_13_0_1 = (Keyword)cHMethodAlternatives_13_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cHttpAuthKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Keyword cMethodKeyword_15_2 = (Keyword)cGroup_15.eContents().get(2);
		private final Keyword cEqualsSignKeyword_15_3 = (Keyword)cGroup_15.eContents().get(3);
		private final Assignment cAuthMethodAssignment_15_4 = (Assignment)cGroup_15.eContents().get(4);
		private final CrossReference cAuthMethodScriptParamCrossReference_15_4_0 = (CrossReference)cAuthMethodAssignment_15_4.eContents().get(0);
		private final RuleCall cAuthMethodScriptParamSTRINGTerminalRuleCall_15_4_0_1 = (RuleCall)cAuthMethodScriptParamCrossReference_15_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_15_5 = (Keyword)cGroup_15.eContents().get(5);
		private final Keyword cAuthUsernameKeyword_15_6 = (Keyword)cGroup_15.eContents().get(6);
		private final Keyword cEqualsSignKeyword_15_7 = (Keyword)cGroup_15.eContents().get(7);
		private final Assignment cUsernameAssignment_15_8 = (Assignment)cGroup_15.eContents().get(8);
		private final CrossReference cUsernameScriptParamCrossReference_15_8_0 = (CrossReference)cUsernameAssignment_15_8.eContents().get(0);
		private final RuleCall cUsernameScriptParamSTRINGTerminalRuleCall_15_8_0_1 = (RuleCall)cUsernameScriptParamCrossReference_15_8_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_15_9 = (Keyword)cGroup_15.eContents().get(9);
		private final Keyword cAuthPasswordKeyword_15_10 = (Keyword)cGroup_15.eContents().get(10);
		private final Keyword cEqualsSignKeyword_15_11 = (Keyword)cGroup_15.eContents().get(11);
		private final Assignment cPasswordAssignment_15_12 = (Assignment)cGroup_15.eContents().get(12);
		private final CrossReference cPasswordScriptParamCrossReference_15_12_0 = (CrossReference)cPasswordAssignment_15_12.eContents().get(0);
		private final RuleCall cPasswordScriptParamSTRINGTerminalRuleCall_15_12_0_1 = (RuleCall)cPasswordScriptParamCrossReference_15_12_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_15_13 = (Keyword)cGroup_15.eContents().get(13);
		private final Keyword cRightCurlyBracketKeyword_15_14 = (Keyword)cGroup_15.eContents().get(14);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cPostBodyKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Keyword cEqualsSignKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Assignment cPostBodyAssignment_16_2 = (Assignment)cGroup_16.eContents().get(2);
		private final CrossReference cPostBodyScriptParamCrossReference_16_2_0 = (CrossReference)cPostBodyAssignment_16_2.eContents().get(0);
		private final RuleCall cPostBodyScriptParamSTRINGTerminalRuleCall_16_2_0_1 = (RuleCall)cPostBodyScriptParamCrossReference_16_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_16_3 = (Keyword)cGroup_16.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//ruleHTTP:
		//	{ruleHTTP} "HTTP" "{" "RemoteMachine" "=" remoteMachine=[scriptParam|STRING] ";" "HttpURL" "=" httpURL+=ruleHTTP_URL*
		//	";" "HttpMethod" "=" HMethod=("GET" | "POST") ";" ("HttpAuth" "{" "Method" "=" AuthMethod=[scriptParam|STRING] ";"
		//	"AuthUsername" "=" username=[scriptParam|STRING] ";" "AuthPassword" "=" password=[scriptParam|STRING] ";" "}")?
		//	("PostBody" "=" postBody=[scriptParam|STRING] ";") "}";
		public ParserRule getRule() { return rule; }

		//{ruleHTTP} "HTTP" "{" "RemoteMachine" "=" remoteMachine=[scriptParam|STRING] ";" "HttpURL" "=" httpURL+=ruleHTTP_URL*
		//";" "HttpMethod" "=" HMethod=("GET" | "POST") ";" ("HttpAuth" "{" "Method" "=" AuthMethod=[scriptParam|STRING] ";"
		//"AuthUsername" "=" username=[scriptParam|STRING] ";" "AuthPassword" "=" password=[scriptParam|STRING] ";" "}")?
		//("PostBody" "=" postBody=[scriptParam|STRING] ";") "}"
		public Group getGroup() { return cGroup; }

		//{ruleHTTP}
		public Action getRuleHTTPAction_0() { return cRuleHTTPAction_0; }

		//"HTTP"
		public Keyword getHTTPKeyword_1() { return cHTTPKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"RemoteMachine"
		public Keyword getRemoteMachineKeyword_3() { return cRemoteMachineKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//remoteMachine=[scriptParam|STRING]
		public Assignment getRemoteMachineAssignment_5() { return cRemoteMachineAssignment_5; }

		//[scriptParam|STRING]
		public CrossReference getRemoteMachineScriptParamCrossReference_5_0() { return cRemoteMachineScriptParamCrossReference_5_0; }

		//STRING
		public RuleCall getRemoteMachineScriptParamSTRINGTerminalRuleCall_5_0_1() { return cRemoteMachineScriptParamSTRINGTerminalRuleCall_5_0_1; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }

		//"HttpURL"
		public Keyword getHttpURLKeyword_7() { return cHttpURLKeyword_7; }

		//"="
		public Keyword getEqualsSignKeyword_8() { return cEqualsSignKeyword_8; }

		//httpURL+=ruleHTTP_URL*
		public Assignment getHttpURLAssignment_9() { return cHttpURLAssignment_9; }

		//ruleHTTP_URL
		public RuleCall getHttpURLRuleHTTP_URLParserRuleCall_9_0() { return cHttpURLRuleHTTP_URLParserRuleCall_9_0; }

		//";"
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }

		//"HttpMethod"
		public Keyword getHttpMethodKeyword_11() { return cHttpMethodKeyword_11; }

		//"="
		public Keyword getEqualsSignKeyword_12() { return cEqualsSignKeyword_12; }

		//HMethod=("GET" | "POST")
		public Assignment getHMethodAssignment_13() { return cHMethodAssignment_13; }

		//"GET" | "POST"
		public Alternatives getHMethodAlternatives_13_0() { return cHMethodAlternatives_13_0; }

		//"GET"
		public Keyword getHMethodGETKeyword_13_0_0() { return cHMethodGETKeyword_13_0_0; }

		//"POST"
		public Keyword getHMethodPOSTKeyword_13_0_1() { return cHMethodPOSTKeyword_13_0_1; }

		//";"
		public Keyword getSemicolonKeyword_14() { return cSemicolonKeyword_14; }

		//("HttpAuth" "{" "Method" "=" AuthMethod=[scriptParam|STRING] ";" "AuthUsername" "=" username=[scriptParam|STRING] ";"
		//"AuthPassword" "=" password=[scriptParam|STRING] ";" "}")?
		public Group getGroup_15() { return cGroup_15; }

		//"HttpAuth"
		public Keyword getHttpAuthKeyword_15_0() { return cHttpAuthKeyword_15_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_15_1() { return cLeftCurlyBracketKeyword_15_1; }

		//"Method"
		public Keyword getMethodKeyword_15_2() { return cMethodKeyword_15_2; }

		//"="
		public Keyword getEqualsSignKeyword_15_3() { return cEqualsSignKeyword_15_3; }

		//AuthMethod=[scriptParam|STRING]
		public Assignment getAuthMethodAssignment_15_4() { return cAuthMethodAssignment_15_4; }

		//[scriptParam|STRING]
		public CrossReference getAuthMethodScriptParamCrossReference_15_4_0() { return cAuthMethodScriptParamCrossReference_15_4_0; }

		//STRING
		public RuleCall getAuthMethodScriptParamSTRINGTerminalRuleCall_15_4_0_1() { return cAuthMethodScriptParamSTRINGTerminalRuleCall_15_4_0_1; }

		//";"
		public Keyword getSemicolonKeyword_15_5() { return cSemicolonKeyword_15_5; }

		//"AuthUsername"
		public Keyword getAuthUsernameKeyword_15_6() { return cAuthUsernameKeyword_15_6; }

		//"="
		public Keyword getEqualsSignKeyword_15_7() { return cEqualsSignKeyword_15_7; }

		//username=[scriptParam|STRING]
		public Assignment getUsernameAssignment_15_8() { return cUsernameAssignment_15_8; }

		//[scriptParam|STRING]
		public CrossReference getUsernameScriptParamCrossReference_15_8_0() { return cUsernameScriptParamCrossReference_15_8_0; }

		//STRING
		public RuleCall getUsernameScriptParamSTRINGTerminalRuleCall_15_8_0_1() { return cUsernameScriptParamSTRINGTerminalRuleCall_15_8_0_1; }

		//";"
		public Keyword getSemicolonKeyword_15_9() { return cSemicolonKeyword_15_9; }

		//"AuthPassword"
		public Keyword getAuthPasswordKeyword_15_10() { return cAuthPasswordKeyword_15_10; }

		//"="
		public Keyword getEqualsSignKeyword_15_11() { return cEqualsSignKeyword_15_11; }

		//password=[scriptParam|STRING]
		public Assignment getPasswordAssignment_15_12() { return cPasswordAssignment_15_12; }

		//[scriptParam|STRING]
		public CrossReference getPasswordScriptParamCrossReference_15_12_0() { return cPasswordScriptParamCrossReference_15_12_0; }

		//STRING
		public RuleCall getPasswordScriptParamSTRINGTerminalRuleCall_15_12_0_1() { return cPasswordScriptParamSTRINGTerminalRuleCall_15_12_0_1; }

		//";"
		public Keyword getSemicolonKeyword_15_13() { return cSemicolonKeyword_15_13; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_15_14() { return cRightCurlyBracketKeyword_15_14; }

		//"PostBody" "=" postBody=[scriptParam|STRING] ";"
		public Group getGroup_16() { return cGroup_16; }

		//"PostBody"
		public Keyword getPostBodyKeyword_16_0() { return cPostBodyKeyword_16_0; }

		//"="
		public Keyword getEqualsSignKeyword_16_1() { return cEqualsSignKeyword_16_1; }

		//postBody=[scriptParam|STRING]
		public Assignment getPostBodyAssignment_16_2() { return cPostBodyAssignment_16_2; }

		//[scriptParam|STRING]
		public CrossReference getPostBodyScriptParamCrossReference_16_2_0() { return cPostBodyScriptParamCrossReference_16_2_0; }

		//STRING
		public RuleCall getPostBodyScriptParamSTRINGTerminalRuleCall_16_2_0_1() { return cPostBodyScriptParamSTRINGTerminalRuleCall_16_2_0_1; }

		//";"
		public Keyword getSemicolonKeyword_16_3() { return cSemicolonKeyword_16_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}

	public class RuleHTTP_URLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ruleHTTP_URL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRuleHTTP_URLAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cRemoteURLAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRemoteURLSTRINGTerminalRuleCall_1_0 = (RuleCall)cRemoteURLAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLessThanSignLessThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cScriptparamsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cScriptparamsScriptParamCrossReference_2_1_0 = (CrossReference)cScriptparamsAssignment_2_1.eContents().get(0);
		private final RuleCall cScriptparamsScriptParamSTRINGTerminalRuleCall_2_1_0_1 = (RuleCall)cScriptparamsScriptParamCrossReference_2_1_0.eContents().get(1);
		private final Keyword cGreaterThanSignGreaterThanSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//ruleHTTP_URL:
		//	{ruleHTTP_URL} remoteURL=STRING ("<<" scriptparams+=[scriptParam|STRING]* ">>")?;
		public ParserRule getRule() { return rule; }

		//{ruleHTTP_URL} remoteURL=STRING ("<<" scriptparams+=[scriptParam|STRING]* ">>")?
		public Group getGroup() { return cGroup; }

		//{ruleHTTP_URL}
		public Action getRuleHTTP_URLAction_0() { return cRuleHTTP_URLAction_0; }

		//remoteURL=STRING
		public Assignment getRemoteURLAssignment_1() { return cRemoteURLAssignment_1; }

		//STRING
		public RuleCall getRemoteURLSTRINGTerminalRuleCall_1_0() { return cRemoteURLSTRINGTerminalRuleCall_1_0; }

		//("<<" scriptparams+=[scriptParam|STRING]* ">>")?
		public Group getGroup_2() { return cGroup_2; }

		//"<<"
		public Keyword getLessThanSignLessThanSignKeyword_2_0() { return cLessThanSignLessThanSignKeyword_2_0; }

		//scriptparams+=[scriptParam|STRING]*
		public Assignment getScriptparamsAssignment_2_1() { return cScriptparamsAssignment_2_1; }

		//[scriptParam|STRING]
		public CrossReference getScriptparamsScriptParamCrossReference_2_1_0() { return cScriptparamsScriptParamCrossReference_2_1_0; }

		//STRING
		public RuleCall getScriptparamsScriptParamSTRINGTerminalRuleCall_2_1_0_1() { return cScriptparamsScriptParamSTRINGTerminalRuleCall_2_1_0_1; }

		//">>"
		public Keyword getGreaterThanSignGreaterThanSignKeyword_2_2() { return cGreaterThanSignGreaterThanSignKeyword_2_2; }
	}

	public class RuleXMLRPCElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ruleXMLRPC");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRuleXMLRPCAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cXMLRPCKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cServerURLKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRemoteMachineAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cRemoteMachineBindingParamCrossReference_5_0 = (CrossReference)cRemoteMachineAssignment_5.eContents().get(0);
		private final RuleCall cRemoteMachineBindingParamIDTerminalRuleCall_5_0_1 = (RuleCall)cRemoteMachineBindingParamCrossReference_5_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cHttpBasicAuthKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cBasicAuthUsernameKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Keyword cEqualsSignKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Assignment cUsernameAssignment_7_4 = (Assignment)cGroup_7.eContents().get(4);
		private final CrossReference cUsernameBindingParamCrossReference_7_4_0 = (CrossReference)cUsernameAssignment_7_4.eContents().get(0);
		private final RuleCall cUsernameBindingParamIDTerminalRuleCall_7_4_0_1 = (RuleCall)cUsernameBindingParamCrossReference_7_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_7_5 = (Keyword)cGroup_7.eContents().get(5);
		private final Keyword cBasicAuthPasswordKeyword_7_6 = (Keyword)cGroup_7.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7_7 = (Keyword)cGroup_7.eContents().get(7);
		private final Assignment cPasswordAssignment_7_8 = (Assignment)cGroup_7.eContents().get(8);
		private final CrossReference cPasswordBindingParamCrossReference_7_8_0 = (CrossReference)cPasswordAssignment_7_8.eContents().get(0);
		private final RuleCall cPasswordBindingParamIDTerminalRuleCall_7_8_0_1 = (RuleCall)cPasswordBindingParamCrossReference_7_8_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_7_9 = (Keyword)cGroup_7.eContents().get(9);
		private final Keyword cRightCurlyBracketKeyword_7_10 = (Keyword)cGroup_7.eContents().get(10);
		private final Keyword cRPCMethodKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cEqualsSignKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cRPCMethodAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cRPCMethodBindingParamCrossReference_10_0 = (CrossReference)cRPCMethodAssignment_10.eContents().get(0);
		private final RuleCall cRPCMethodBindingParamIDTerminalRuleCall_10_0_1 = (RuleCall)cRPCMethodBindingParamCrossReference_10_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cParametersKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cEqualsSignKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cURLparamsAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final CrossReference cURLparamsConfigurationParamCrossReference_12_2_0 = (CrossReference)cURLparamsAssignment_12_2.eContents().get(0);
		private final RuleCall cURLparamsConfigurationParamSTRINGTerminalRuleCall_12_2_0_1 = (RuleCall)cURLparamsConfigurationParamCrossReference_12_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//ruleXMLRPC:
		//	{ruleXMLRPC} "XML-RPC" "{" "ServerURL" "=" remoteMachine=[BindingParam] ";" ("HttpBasicAuth" "{" "BasicAuthUsername"
		//	"=" username=[BindingParam] ";" "BasicAuthPassword" "=" password=[BindingParam] ";" "}")? "RPCMethod" "="
		//	RPCMethod=[BindingParam] ";" ("parameters" "=" URLparams+=[ConfigurationParam|STRING]*)? "}";
		public ParserRule getRule() { return rule; }

		//{ruleXMLRPC} "XML-RPC" "{" "ServerURL" "=" remoteMachine=[BindingParam] ";" ("HttpBasicAuth" "{" "BasicAuthUsername" "="
		//username=[BindingParam] ";" "BasicAuthPassword" "=" password=[BindingParam] ";" "}")? "RPCMethod" "="
		//RPCMethod=[BindingParam] ";" ("parameters" "=" URLparams+=[ConfigurationParam|STRING]*)? "}"
		public Group getGroup() { return cGroup; }

		//{ruleXMLRPC}
		public Action getRuleXMLRPCAction_0() { return cRuleXMLRPCAction_0; }

		//"XML-RPC"
		public Keyword getXMLRPCKeyword_1() { return cXMLRPCKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"ServerURL"
		public Keyword getServerURLKeyword_3() { return cServerURLKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//remoteMachine=[BindingParam]
		public Assignment getRemoteMachineAssignment_5() { return cRemoteMachineAssignment_5; }

		//[BindingParam]
		public CrossReference getRemoteMachineBindingParamCrossReference_5_0() { return cRemoteMachineBindingParamCrossReference_5_0; }

		//ID
		public RuleCall getRemoteMachineBindingParamIDTerminalRuleCall_5_0_1() { return cRemoteMachineBindingParamIDTerminalRuleCall_5_0_1; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }

		//("HttpBasicAuth" "{" "BasicAuthUsername" "=" username=[BindingParam] ";" "BasicAuthPassword" "=" password=[BindingParam]
		//";" "}")?
		public Group getGroup_7() { return cGroup_7; }

		//"HttpBasicAuth"
		public Keyword getHttpBasicAuthKeyword_7_0() { return cHttpBasicAuthKeyword_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }

		//"BasicAuthUsername"
		public Keyword getBasicAuthUsernameKeyword_7_2() { return cBasicAuthUsernameKeyword_7_2; }

		//"="
		public Keyword getEqualsSignKeyword_7_3() { return cEqualsSignKeyword_7_3; }

		//username=[BindingParam]
		public Assignment getUsernameAssignment_7_4() { return cUsernameAssignment_7_4; }

		//[BindingParam]
		public CrossReference getUsernameBindingParamCrossReference_7_4_0() { return cUsernameBindingParamCrossReference_7_4_0; }

		//ID
		public RuleCall getUsernameBindingParamIDTerminalRuleCall_7_4_0_1() { return cUsernameBindingParamIDTerminalRuleCall_7_4_0_1; }

		//";"
		public Keyword getSemicolonKeyword_7_5() { return cSemicolonKeyword_7_5; }

		//"BasicAuthPassword"
		public Keyword getBasicAuthPasswordKeyword_7_6() { return cBasicAuthPasswordKeyword_7_6; }

		//"="
		public Keyword getEqualsSignKeyword_7_7() { return cEqualsSignKeyword_7_7; }

		//password=[BindingParam]
		public Assignment getPasswordAssignment_7_8() { return cPasswordAssignment_7_8; }

		//[BindingParam]
		public CrossReference getPasswordBindingParamCrossReference_7_8_0() { return cPasswordBindingParamCrossReference_7_8_0; }

		//ID
		public RuleCall getPasswordBindingParamIDTerminalRuleCall_7_8_0_1() { return cPasswordBindingParamIDTerminalRuleCall_7_8_0_1; }

		//";"
		public Keyword getSemicolonKeyword_7_9() { return cSemicolonKeyword_7_9; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7_10() { return cRightCurlyBracketKeyword_7_10; }

		//"RPCMethod"
		public Keyword getRPCMethodKeyword_8() { return cRPCMethodKeyword_8; }

		//"="
		public Keyword getEqualsSignKeyword_9() { return cEqualsSignKeyword_9; }

		//RPCMethod=[BindingParam]
		public Assignment getRPCMethodAssignment_10() { return cRPCMethodAssignment_10; }

		//[BindingParam]
		public CrossReference getRPCMethodBindingParamCrossReference_10_0() { return cRPCMethodBindingParamCrossReference_10_0; }

		//ID
		public RuleCall getRPCMethodBindingParamIDTerminalRuleCall_10_0_1() { return cRPCMethodBindingParamIDTerminalRuleCall_10_0_1; }

		//";"
		public Keyword getSemicolonKeyword_11() { return cSemicolonKeyword_11; }

		//("parameters" "=" URLparams+=[ConfigurationParam|STRING]*)?
		public Group getGroup_12() { return cGroup_12; }

		//"parameters"
		public Keyword getParametersKeyword_12_0() { return cParametersKeyword_12_0; }

		//"="
		public Keyword getEqualsSignKeyword_12_1() { return cEqualsSignKeyword_12_1; }

		//URLparams+=[ConfigurationParam|STRING]*
		public Assignment getURLparamsAssignment_12_2() { return cURLparamsAssignment_12_2; }

		//[ConfigurationParam|STRING]
		public CrossReference getURLparamsConfigurationParamCrossReference_12_2_0() { return cURLparamsConfigurationParamCrossReference_12_2_0; }

		//STRING
		public RuleCall getURLparamsConfigurationParamSTRINGTerminalRuleCall_12_2_0_1() { return cURLparamsConfigurationParamSTRINGTerminalRuleCall_12_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	
	
	private RADLElements pRADL;
	private ImportElements pImport;
	private ResourceAdapterElements pResourceAdapter;
	private ConfigurationParamElements pConfigurationParam;
	private BindingParamElements pBindingParam;
	private SupportedChildTypeElements pSupportedChildType;
	private AllowedTypeElements pAllowedType;
	private ProtocolElements pProtocol;
	private ParameterTypeElements pParameterType;
	private RuleSSHElements pRuleSSH;
	private RuleJavaWrapperElements pRuleJavaWrapper;
	private CommandElements pCommand;
	private EntryCommandElements pEntryCommand;
	private RulJava_paramElements pRulJava_param;
	private RulJava_paramStringElements pRulJava_paramString;
	private RulJava_paramIntElements pRulJava_paramInt;
	private RulJava_paraScriptElements pRulJava_paraScript;
	private AssignCommandElements pAssignCommand;
	private ScriptParamElements pScriptParam;
	private RulSSH_commandsElements pRulSSH_commands;
	private RuleHTTPElements pRuleHTTP;
	private RuleHTTP_URLElements pRuleHTTP_URL;
	private RuleXMLRPCElements pRuleXMLRPC;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public RadlGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//RADL:
	//	imports=Import? resourceAdapter=ResourceAdapter;
	public RADLElements getRADLAccess() {
		return (pRADL != null) ? pRADL : (pRADL = new RADLElements());
	}
	
	public ParserRule getRADLRule() {
		return getRADLAccess().getRule();
	}

	//Import:
	//	"import service" importURI=STRING;
	public ImportElements getImportAccess() {
		return (pImport != null) ? pImport : (pImport = new ImportElements());
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//ResourceAdapter:
	//	"Resource Adapter" name=STRING ("implements" implname=[services::OfferedService|STRING])? ("Configuration Parameters"
	//	"{" confParams+=ConfigurationParam* "}")? ("Binding Parameters" "{" bindParams+=BindingParam* "}")?
	//	("Supported Child Types" "{" childParams+=SupportedChildType* "}")? ("Allowed Types" "{" allowParams+=AllowedType*
	//	"}")? ("On Update" "{" "ProcessOnAllConfigurationParametersComplete" "=" ConfComplete=("YES" | "NO") ";" "RAProtocol"
	//	protocol=Protocol "}")?;
	public ResourceAdapterElements getResourceAdapterAccess() {
		return (pResourceAdapter != null) ? pResourceAdapter : (pResourceAdapter = new ResourceAdapterElements());
	}
	
	public ParserRule getResourceAdapterRule() {
		return getResourceAdapterAccess().getRule();
	}

	//ConfigurationParam:
	//	{ConfigurationParam} paramType=ParameterType? name=(ID | STRING) ("=" defValue=STRING)? ("implements"
	//	servsetting=[services::ServiceSetting|STRING])? ("description" "=" descriptionValue=STRING)? ";";
	public ConfigurationParamElements getConfigurationParamAccess() {
		return (pConfigurationParam != null) ? pConfigurationParam : (pConfigurationParam = new ConfigurationParamElements());
	}
	
	public ParserRule getConfigurationParamRule() {
		return getConfigurationParamAccess().getRule();
	}

	//BindingParam:
	//	{BindingParam} paramType=ParameterType? name=(ID | STRING) ("=" defValue=STRING)? ("description" "="
	//	descriptionValue=STRING)? ";";
	public BindingParamElements getBindingParamAccess() {
		return (pBindingParam != null) ? pBindingParam : (pBindingParam = new BindingParamElements());
	}
	
	public ParserRule getBindingParamRule() {
		return getBindingParamAccess().getRule();
	}

	//SupportedChildType:
	//	{SupportedChildType} paramType=ParameterType? name=(ID | STRING) ("=" defValue=STRING)? ";";
	public SupportedChildTypeElements getSupportedChildTypeAccess() {
		return (pSupportedChildType != null) ? pSupportedChildType : (pSupportedChildType = new SupportedChildTypeElements());
	}
	
	public ParserRule getSupportedChildTypeRule() {
		return getSupportedChildTypeAccess().getRule();
	}

	//AllowedType:
	//	{AllowedType} paramType=ParameterType? name=(ID | STRING) ("=" defValue=STRING)? ";";
	public AllowedTypeElements getAllowedTypeAccess() {
		return (pAllowedType != null) ? pAllowedType : (pAllowedType = new AllowedTypeElements());
	}
	
	public ParserRule getAllowedTypeRule() {
		return getAllowedTypeAccess().getRule();
	}

	//Protocol:
	//	ruleSSH | ruleHTTP | ruleXMLRPC | ruleJavaWrapper;
	public ProtocolElements getProtocolAccess() {
		return (pProtocol != null) ? pProtocol : (pProtocol = new ProtocolElements());
	}
	
	public ParserRule getProtocolRule() {
		return getProtocolAccess().getRule();
	}

	//ParameterType:
	//	{ParameterType} pName=("String" | "Integer" | "Boolean" | "Enum" | "REFERENCE");
	public ParameterTypeElements getParameterTypeAccess() {
		return (pParameterType != null) ? pParameterType : (pParameterType = new ParameterTypeElements());
	}
	
	public ParserRule getParameterTypeRule() {
		return getParameterTypeAccess().getRule();
	}

	//ruleSSH:
	//	{ruleSSH} "SSH" "{" "Remote Machine" "=" remoteMachine=[scriptParam|STRING] ";" "RPort" "=" RPort=[scriptParam|STRING]
	//	";" "RUsername" "=" username=[scriptParam|STRING] ";" "RPassword" "=" password=[scriptParam|STRING] ";" "RExecute" "{"
	//	commands+=rulSSH_commands* "}" "RExecuteDelete" "{" commandsDelete+=rulSSH_commands* "}" "}";
	public RuleSSHElements getRuleSSHAccess() {
		return (pRuleSSH != null) ? pRuleSSH : (pRuleSSH = new RuleSSHElements());
	}
	
	public ParserRule getRuleSSHRule() {
		return getRuleSSHAccess().getRule();
	}

	//ruleJavaWrapper:
	//	{ruleJavaWrapper} "Java" classname=ID "(" (constructorParams+=rulJava_param ("," constructorParams+=rulJava_param)*)?
	//	")" "{" commands+=Command* "}";
	public RuleJavaWrapperElements getRuleJavaWrapperAccess() {
		return (pRuleJavaWrapper != null) ? pRuleJavaWrapper : (pRuleJavaWrapper = new RuleJavaWrapperElements());
	}
	
	public ParserRule getRuleJavaWrapperRule() {
		return getRuleJavaWrapperAccess().getRule();
	}

	//Command:
	//	entryCommand | assignCommand;
	public CommandElements getCommandAccess() {
		return (pCommand != null) ? pCommand : (pCommand = new CommandElements());
	}
	
	public ParserRule getCommandRule() {
		return getCommandAccess().getRule();
	}

	//entryCommand:
	//	"JExecute" javaFunctionName=ID "(" (commands+=rulJava_param ("," commands+=rulJava_param)*)? ")";
	public EntryCommandElements getEntryCommandAccess() {
		return (pEntryCommand != null) ? pEntryCommand : (pEntryCommand = new EntryCommandElements());
	}
	
	public ParserRule getEntryCommandRule() {
		return getEntryCommandAccess().getRule();
	}

	//rulJava_param:
	//	rulJava_paramString | rulJava_paramInt | rulJava_paraScript;
	public RulJava_paramElements getRulJava_paramAccess() {
		return (pRulJava_param != null) ? pRulJava_param : (pRulJava_param = new RulJava_paramElements());
	}
	
	public ParserRule getRulJava_paramRule() {
		return getRulJava_paramAccess().getRule();
	}

	//rulJava_paramString:
	//	stringValue=STRING;
	public RulJava_paramStringElements getRulJava_paramStringAccess() {
		return (pRulJava_paramString != null) ? pRulJava_paramString : (pRulJava_paramString = new RulJava_paramStringElements());
	}
	
	public ParserRule getRulJava_paramStringRule() {
		return getRulJava_paramStringAccess().getRule();
	}

	//rulJava_paramInt:
	//	intValue=INT;
	public RulJava_paramIntElements getRulJava_paramIntAccess() {
		return (pRulJava_paramInt != null) ? pRulJava_paramInt : (pRulJava_paramInt = new RulJava_paramIntElements());
	}
	
	public ParserRule getRulJava_paramIntRule() {
		return getRulJava_paramIntAccess().getRule();
	}

	//rulJava_paraScript:
	//	scriptparamValue=[scriptParam];
	public RulJava_paraScriptElements getRulJava_paraScriptAccess() {
		return (pRulJava_paraScript != null) ? pRulJava_paraScript : (pRulJava_paraScript = new RulJava_paraScriptElements());
	}
	
	public ParserRule getRulJava_paraScriptRule() {
		return getRulJava_paraScriptAccess().getRule();
	}

	//assignCommand:
	//	{assignCommand} "JAssign" scriptParam=[scriptParam] "=" javaFunctionName=ID "(" (commands+=rulJava_param (","
	//	commands+=rulJava_param)*)? ")";
	public AssignCommandElements getAssignCommandAccess() {
		return (pAssignCommand != null) ? pAssignCommand : (pAssignCommand = new AssignCommandElements());
	}
	
	public ParserRule getAssignCommandRule() {
		return getAssignCommandAccess().getRule();
	}

	////ruleSSH_File returns ruleSSH_File:
	////{ruleSSH_File}
	////	'Remote Script' '=' remoteScript=STRING
	////	('parameters' '=' (scriptparams+=[ConfigurationParam | STRING])*  )? 
	////;
	//scriptParam:
	//	ConfigurationParam | BindingParam;
	public ScriptParamElements getScriptParamAccess() {
		return (pScriptParam != null) ? pScriptParam : (pScriptParam = new ScriptParamElements());
	}
	
	public ParserRule getScriptParamRule() {
		return getScriptParamAccess().getRule();
	}

	//rulSSH_commands:
	//	{rulSSH_commands} remoteCommand=STRING ("<<" scriptparams+=[scriptParam|STRING]* ">>")?;
	public RulSSH_commandsElements getRulSSH_commandsAccess() {
		return (pRulSSH_commands != null) ? pRulSSH_commands : (pRulSSH_commands = new RulSSH_commandsElements());
	}
	
	public ParserRule getRulSSH_commandsRule() {
		return getRulSSH_commandsAccess().getRule();
	}

	//ruleHTTP:
	//	{ruleHTTP} "HTTP" "{" "RemoteMachine" "=" remoteMachine=[scriptParam|STRING] ";" "HttpURL" "=" httpURL+=ruleHTTP_URL*
	//	";" "HttpMethod" "=" HMethod=("GET" | "POST") ";" ("HttpAuth" "{" "Method" "=" AuthMethod=[scriptParam|STRING] ";"
	//	"AuthUsername" "=" username=[scriptParam|STRING] ";" "AuthPassword" "=" password=[scriptParam|STRING] ";" "}")?
	//	("PostBody" "=" postBody=[scriptParam|STRING] ";") "}";
	public RuleHTTPElements getRuleHTTPAccess() {
		return (pRuleHTTP != null) ? pRuleHTTP : (pRuleHTTP = new RuleHTTPElements());
	}
	
	public ParserRule getRuleHTTPRule() {
		return getRuleHTTPAccess().getRule();
	}

	//ruleHTTP_URL:
	//	{ruleHTTP_URL} remoteURL=STRING ("<<" scriptparams+=[scriptParam|STRING]* ">>")?;
	public RuleHTTP_URLElements getRuleHTTP_URLAccess() {
		return (pRuleHTTP_URL != null) ? pRuleHTTP_URL : (pRuleHTTP_URL = new RuleHTTP_URLElements());
	}
	
	public ParserRule getRuleHTTP_URLRule() {
		return getRuleHTTP_URLAccess().getRule();
	}

	//ruleXMLRPC:
	//	{ruleXMLRPC} "XML-RPC" "{" "ServerURL" "=" remoteMachine=[BindingParam] ";" ("HttpBasicAuth" "{" "BasicAuthUsername"
	//	"=" username=[BindingParam] ";" "BasicAuthPassword" "=" password=[BindingParam] ";" "}")? "RPCMethod" "="
	//	RPCMethod=[BindingParam] ";" ("parameters" "=" URLparams+=[ConfigurationParam|STRING]*)? "}";
	public RuleXMLRPCElements getRuleXMLRPCAccess() {
		return (pRuleXMLRPC != null) ? pRuleXMLRPC : (pRuleXMLRPC = new RuleXMLRPCElements());
	}
	
	public ParserRule getRuleXMLRPCRule() {
		return getRuleXMLRPCAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" | "n" |
	//	"f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
