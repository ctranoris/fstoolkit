/*
* generated by Xtext
*/
grammar InternalFSDL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.panlab.software.fsdl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.panlab.software.fsdl.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.panlab.software.fsdl.services.FSDLGrammarAccess;

}

@parser::members {

 	private FSDLGrammarAccess grammarAccess;
 	
    public InternalFSDLParser(TokenStream input, IAstFactory factory, FSDLGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/panlab/software/fsdl/parser/antlr/internal/InternalFSDL.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "RequestedFederationScenario";	
   	}
   	
   	@Override
   	protected FSDLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleRequestedFederationScenario
entryRuleRequestedFederationScenario returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRequestedFederationScenarioRule(), currentNode); }
	 iv_ruleRequestedFederationScenario=ruleRequestedFederationScenario 
	 { $current=$iv_ruleRequestedFederationScenario.current; } 
	 EOF 
;

// Rule RequestedFederationScenario
ruleRequestedFederationScenario returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getRequestedFederationScenarioAccess().getRequestedFederationScenarioAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getRequestedFederationScenarioAccess().getRequestedFederationScenarioAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'RequestedFederationScenario' 
    {
        createLeafNode(grammarAccess.getRequestedFederationScenarioAccess().getRequestedFederationScenarioKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getRequestedFederationScenarioAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequestedFederationScenarioRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequestedFederationScenarioAccess().getImportsImportParserRuleCall_3_0(), currentNode); 
	    }
		lv_imports_3_0=ruleImport		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequestedFederationScenarioRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"imports",
	        		lv_imports_3_0, 
	        		"Import", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		lv_isShared_4_0=	'isShared' 
    {
        createLeafNode(grammarAccess.getRequestedFederationScenarioAccess().getIsSharedIsSharedKeyword_4_0(), "isShared"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequestedFederationScenarioRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isShared", true, "isShared", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(	'Description' 
    {
        createLeafNode(grammarAccess.getRequestedFederationScenarioAccess().getDescriptionKeyword_5_0(), null); 
    }
(
(
		lv_description_6_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getRequestedFederationScenarioAccess().getDescriptionSTRINGTerminalRuleCall_5_1_0(), "description"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequestedFederationScenarioRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"description",
	        		lv_description_6_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(	'Credentials' 
    {
        createLeafNode(grammarAccess.getRequestedFederationScenarioAccess().getCredentialsKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequestedFederationScenarioAccess().getVTCredentialsCredentialsParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_VTCredentials_8_0=ruleCredentials		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequestedFederationScenarioRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"VTCredentials",
	        		lv_VTCredentials_8_0, 
	        		"Credentials", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequestedFederationScenarioAccess().getScheduledPlanScheduledPlanParserRuleCall_7_0(), currentNode); 
	    }
		lv_scheduledPlan_9_0=ruleScheduledPlan		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequestedFederationScenarioRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"scheduledPlan",
	        		lv_scheduledPlan_9_0, 
	        		"ScheduledPlan", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequestedFederationScenarioAccess().getServicesRequestServicesRequestParserRuleCall_8_0(), currentNode); 
	    }
		lv_servicesRequest_10_0=ruleServicesRequest		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequestedFederationScenarioRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"servicesRequest",
	        		lv_servicesRequest_10_0, 
	        		"ServicesRequest", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequestedFederationScenarioAccess().getInfrastructureRequestInfrastructureRequestParserRuleCall_9_0(), currentNode); 
	    }
		lv_infrastructureRequest_11_0=ruleInfrastructureRequest		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequestedFederationScenarioRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"infrastructureRequest",
	        		lv_infrastructureRequest_11_0, 
	        		"InfrastructureRequest", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getImportRule(), currentNode); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'import office' 
    {
        createLeafNode(grammarAccess.getImportAccess().getImportOfficeKeyword_0(), null); 
    }
(
(
		lv_importURI_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0(), "importURI"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImportRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"importURI",
	        		lv_importURI_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getImportAccess().getSemicolonKeyword_2(), null); 
    }
)
;





// Entry rule entryRuleServicesRequest
entryRuleServicesRequest returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getServicesRequestRule(), currentNode); }
	 iv_ruleServicesRequest=ruleServicesRequest 
	 { $current=$iv_ruleServicesRequest.current; } 
	 EOF 
;

// Rule ServicesRequest
ruleServicesRequest returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getServicesRequestAccess().getServicesRequestAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getServicesRequestAccess().getServicesRequestAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'RequestServices' 
    {
        createLeafNode(grammarAccess.getServicesRequestAccess().getRequestServicesKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getServicesRequestAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getServicesRequestAccess().getServiceRequestListServiceRequestParserRuleCall_3_0(), currentNode); 
	    }
		lv_serviceRequestList_3_0=ruleServiceRequest		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServicesRequestRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"serviceRequestList",
	        		lv_serviceRequestList_3_0, 
	        		"ServiceRequest", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getServicesRequestAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleServiceRequest
entryRuleServiceRequest returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getServiceRequestRule(), currentNode); }
	 iv_ruleServiceRequest=ruleServiceRequest 
	 { $current=$iv_ruleServiceRequest.current; } 
	 EOF 
;

// Rule ServiceRequest
ruleServiceRequest returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getServiceRequestAccess().getServiceRequestAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getServiceRequestAccess().getServiceRequestAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'Service' 
    {
        createLeafNode(grammarAccess.getServiceRequestAccess().getServiceKeyword_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceRequestRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getServiceRequestAccess().getRefServiceServiceCrossReference_2_0(), "refService"); 
	}

)
)	'as' 
    {
        createLeafNode(grammarAccess.getServiceRequestAccess().getAsKeyword_3(), null); 
    }
(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getServiceRequestAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceRequestRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'[1..' 
    {
        createLeafNode(grammarAccess.getServiceRequestAccess().getLeftSquareBracketDigitOneFullStopFullStopKeyword_5_0(), null); 
    }
(
(
		lv_numOfServices_6_0=RULE_INT
		{
			createLeafNode(grammarAccess.getServiceRequestAccess().getNumOfServicesINTTerminalRuleCall_5_1_0(), "numOfServices"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceRequestRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"numOfServices",
	        		lv_numOfServices_6_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getServiceRequestAccess().getRightSquareBracketKeyword_5_2(), null); 
    }
)?(	'offered by' 
    {
        createLeafNode(grammarAccess.getServiceRequestAccess().getOfferedByKeyword_6_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceRequestRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getServiceRequestAccess().getOfferedByProvidersResourcesProviderCrossReference_6_1_0(), "OfferedByProviders"); 
	}

)
)(	'optional' 
    {
        createLeafNode(grammarAccess.getServiceRequestAccess().getOptionalKeyword_6_2(), null); 
    }
)?)?(	'settings' 
    {
        createLeafNode(grammarAccess.getServiceRequestAccess().getSettingsKeyword_7_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getServiceRequestAccess().getLeftCurlyBracketKeyword_7_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getServiceRequestAccess().getReqServiceSettingsServiceSettingInstanceParserRuleCall_7_2_0(), currentNode); 
	    }
		lv_reqServiceSettings_13_0=ruleServiceSettingInstance		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceRequestRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"reqServiceSettings",
	        		lv_reqServiceSettings_13_0, 
	        		"ServiceSettingInstance", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getServiceRequestAccess().getRightCurlyBracketKeyword_7_3(), null); 
    }
)?)
;





// Entry rule entryRuleScheduledPlan
entryRuleScheduledPlan returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getScheduledPlanRule(), currentNode); }
	 iv_ruleScheduledPlan=ruleScheduledPlan 
	 { $current=$iv_ruleScheduledPlan.current; } 
	 EOF 
;

// Rule ScheduledPlan
ruleScheduledPlan returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getScheduledPlanAccess().getScheduledPlanAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getScheduledPlanAccess().getScheduledPlanAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'ScheduledPlan' 
    {
        createLeafNode(grammarAccess.getScheduledPlanAccess().getScheduledPlanKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getScheduledPlanAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'ValidFrom' 
    {
        createLeafNode(grammarAccess.getScheduledPlanAccess().getValidFromKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getScheduledPlanAccess().getValidFromEDateParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_ValidFrom_4_0=ruleEDate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScheduledPlanRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"ValidFrom",
	        		lv_ValidFrom_4_0, 
	        		"EDate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'ValidUntil' 
    {
        createLeafNode(grammarAccess.getScheduledPlanAccess().getValidUntilKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getScheduledPlanAccess().getValidUntilEDateParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_ValidUntil_6_0=ruleEDate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScheduledPlanRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"ValidUntil",
	        		lv_ValidUntil_6_0, 
	        		"EDate", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getScheduledPlanAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleCredentials
entryRuleCredentials returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCredentialsRule(), currentNode); }
	 iv_ruleCredentials=ruleCredentials 
	 { $current=$iv_ruleCredentials.current; } 
	 EOF 
;

// Rule Credentials
ruleCredentials returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getCredentialsAccess().getCredentialsAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getCredentialsAccess().getCredentialsAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'Credentials' 
    {
        createLeafNode(grammarAccess.getCredentialsAccess().getCredentialsKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getCredentialsAccess().getNameSTRINGTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCredentialsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getCredentialsAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(	'id' 
    {
        createLeafNode(grammarAccess.getCredentialsAccess().getIdKeyword_4_0(), null); 
    }
(
(
		lv_id_5_0=RULE_INT
		{
			createLeafNode(grammarAccess.getCredentialsAccess().getIdINTTerminalRuleCall_4_1_0(), "id"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCredentialsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"id",
	        		lv_id_5_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(	'description' 
    {
        createLeafNode(grammarAccess.getCredentialsAccess().getDescriptionKeyword_5_0(), null); 
    }
(
(
		lv_description_7_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getCredentialsAccess().getDescriptionSTRINGTerminalRuleCall_5_1_0(), "description"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCredentialsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"description",
	        		lv_description_7_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(	'UserName' 
    {
        createLeafNode(grammarAccess.getCredentialsAccess().getUserNameKeyword_6_0(), null); 
    }
(
(
		lv_username_9_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getCredentialsAccess().getUsernameSTRINGTerminalRuleCall_6_1_0(), "username"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCredentialsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"username",
	        		lv_username_9_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(	'PassWord' 
    {
        createLeafNode(grammarAccess.getCredentialsAccess().getPassWordKeyword_7_0(), null); 
    }
(
(
		lv_password_11_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getCredentialsAccess().getPasswordSTRINGTerminalRuleCall_7_1_0(), "password"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCredentialsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"password",
	        		lv_password_11_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getCredentialsAccess().getRightCurlyBracketKeyword_8(), null); 
    }
)
;





// Entry rule entryRuleServiceSettingInstance
entryRuleServiceSettingInstance returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getServiceSettingInstanceRule(), currentNode); }
	 iv_ruleServiceSettingInstance=ruleServiceSettingInstance 
	 { $current=$iv_ruleServiceSettingInstance.current; } 
	 EOF 
;

// Rule ServiceSettingInstance
ruleServiceSettingInstance returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'Setting' 
    {
        createLeafNode(grammarAccess.getServiceSettingInstanceAccess().getSettingKeyword_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceSettingInstanceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getServiceSettingInstanceAccess().getRefServiceSettingServiceSettingCrossReference_1_0(), "refServiceSetting"); 
	}

)
)	':' 
    {
        createLeafNode(grammarAccess.getServiceSettingInstanceAccess().getColonKeyword_2(), null); 
    }
(
(
(
		lv_name_3_1=RULE_ID
		{
			createLeafNode(grammarAccess.getServiceSettingInstanceAccess().getNameIDTerminalRuleCall_3_0_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceSettingInstanceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_1, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_name_3_2=RULE_STRING
		{
			createLeafNode(grammarAccess.getServiceSettingInstanceAccess().getNameSTRINGTerminalRuleCall_3_0_1(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceSettingInstanceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_2, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(	'=' 
    {
        createLeafNode(grammarAccess.getServiceSettingInstanceAccess().getEqualsSignKeyword_4_0(), null); 
    }
(
(
		lv_staticValue_5_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getServiceSettingInstanceAccess().getStaticValueSTRINGTerminalRuleCall_4_1_0(), "staticValue"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceSettingInstanceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"staticValue",
	        		lv_staticValue_5_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(	'assign' 
    {
        createLeafNode(grammarAccess.getServiceSettingInstanceAccess().getAssignKeyword_5_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceSettingInstanceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getServiceSettingInstanceAccess().getAssignSettingSettingInstanceCrossReference_5_1_0(), "assignSetting"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getServiceSettingInstanceAccess().getCommaKeyword_5_2_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceSettingInstanceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getServiceSettingInstanceAccess().getAssignSettingSettingInstanceCrossReference_5_2_1_0(), "assignSetting"); 
	}

)
))*)?)
;





// Entry rule entryRuleInfrastructureRequest
entryRuleInfrastructureRequest returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInfrastructureRequestRule(), currentNode); }
	 iv_ruleInfrastructureRequest=ruleInfrastructureRequest 
	 { $current=$iv_ruleInfrastructureRequest.current; } 
	 EOF 
;

// Rule InfrastructureRequest
ruleInfrastructureRequest returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getInfrastructureRequestAccess().getInfrastructureRequestAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInfrastructureRequestAccess().getInfrastructureRequestAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'RequestInfrastructure' 
    {
        createLeafNode(grammarAccess.getInfrastructureRequestAccess().getRequestInfrastructureKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getInfrastructureRequestAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInfrastructureRequestAccess().getReqOfferedResourcesResourceRequestParserRuleCall_3_0(), currentNode); 
	    }
		lv_reqOfferedResources_3_0=ruleResourceRequest		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInfrastructureRequestRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"reqOfferedResources",
	        		lv_reqOfferedResources_3_0, 
	        		"ResourceRequest", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInfrastructureRequestAccess().getResourceGroupsResourceGroupParserRuleCall_4_0(), currentNode); 
	    }
		lv_resourceGroups_4_0=ruleResourceGroup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInfrastructureRequestRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"resourceGroups",
	        		lv_resourceGroups_4_0, 
	        		"ResourceGroup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getInfrastructureRequestAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleResourceRequest
entryRuleResourceRequest returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getResourceRequestRule(), currentNode); }
	 iv_ruleResourceRequest=ruleResourceRequest 
	 { $current=$iv_ruleResourceRequest.current; } 
	 EOF 
;

// Rule ResourceRequest
ruleResourceRequest returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'Resource' 
    {
        createLeafNode(grammarAccess.getResourceRequestAccess().getResourceKeyword_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceRequestRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getResourceRequestAccess().getRefOfferedResourceOfferedResourceCrossReference_1_0(), "refOfferedResource"); 
	}

)
)	'as' 
    {
        createLeafNode(grammarAccess.getResourceRequestAccess().getAsKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getResourceRequestAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceRequestRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'settings' 
    {
        createLeafNode(grammarAccess.getResourceRequestAccess().getSettingsKeyword_4_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getResourceRequestAccess().getLeftCurlyBracketKeyword_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getResourceRequestAccess().getReqResourceSettingsResourceSettingInstanceParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_reqResourceSettings_6_0=ruleResourceSettingInstance		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceRequestRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"reqResourceSettings",
	        		lv_reqResourceSettings_6_0, 
	        		"ResourceSettingInstance", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getResourceRequestAccess().getRightCurlyBracketKeyword_4_3(), null); 
    }
)?)
;





// Entry rule entryRuleResourceGroup
entryRuleResourceGroup returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getResourceGroupRule(), currentNode); }
	 iv_ruleResourceGroup=ruleResourceGroup 
	 { $current=$iv_ruleResourceGroup.current; } 
	 EOF 
;

// Rule ResourceGroup
ruleResourceGroup returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getResourceGroupAccess().getResourceGroupAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getResourceGroupAccess().getResourceGroupAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'ResourceGroup' 
    {
        createLeafNode(grammarAccess.getResourceGroupAccess().getResourceGroupKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getResourceGroupAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceGroupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'refersResources' 
    {
        createLeafNode(grammarAccess.getResourceGroupAccess().getRefersResourcesKeyword_3(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getResourceGroupAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceGroupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getResourceGroupAccess().getGroupedResourcesResourceRequestCrossReference_5_0_0(), "groupedResources"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getResourceGroupAccess().getCommaKeyword_5_1_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceGroupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getResourceGroupAccess().getGroupedResourcesResourceRequestCrossReference_5_1_1_0(), "groupedResources"); 
	}

)
))*)?	'}' 
    {
        createLeafNode(grammarAccess.getResourceGroupAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleResourceSettingInstance
entryRuleResourceSettingInstance returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getResourceSettingInstanceRule(), currentNode); }
	 iv_ruleResourceSettingInstance=ruleResourceSettingInstance 
	 { $current=$iv_ruleResourceSettingInstance.current; } 
	 EOF 
;

// Rule ResourceSettingInstance
ruleResourceSettingInstance returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'Setting' 
    {
        createLeafNode(grammarAccess.getResourceSettingInstanceAccess().getSettingKeyword_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceSettingInstanceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getResourceSettingInstanceAccess().getRefResourceSettingResourceSettingCrossReference_1_0(), "refResourceSetting"); 
	}

)
)	':' 
    {
        createLeafNode(grammarAccess.getResourceSettingInstanceAccess().getColonKeyword_2(), null); 
    }
(
(
(
		lv_name_3_1=RULE_ID
		{
			createLeafNode(grammarAccess.getResourceSettingInstanceAccess().getNameIDTerminalRuleCall_3_0_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceSettingInstanceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_1, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_name_3_2=RULE_STRING
		{
			createLeafNode(grammarAccess.getResourceSettingInstanceAccess().getNameSTRINGTerminalRuleCall_3_0_1(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceSettingInstanceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_2, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(	'=' 
    {
        createLeafNode(grammarAccess.getResourceSettingInstanceAccess().getEqualsSignKeyword_4_0(), null); 
    }
(
(
		lv_staticValue_5_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getResourceSettingInstanceAccess().getStaticValueSTRINGTerminalRuleCall_4_1_0(), "staticValue"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceSettingInstanceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"staticValue",
	        		lv_staticValue_5_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(	'assign' 
    {
        createLeafNode(grammarAccess.getResourceSettingInstanceAccess().getAssignKeyword_5_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceSettingInstanceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getResourceSettingInstanceAccess().getAssignSettingSettingInstanceCrossReference_5_1_0(), "assignSetting"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getResourceSettingInstanceAccess().getCommaKeyword_5_2_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceSettingInstanceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getResourceSettingInstanceAccess().getAssignSettingSettingInstanceCrossReference_5_2_1_0(), "assignSetting"); 
	}

)
))*)?)
;





// Entry rule entryRuleEDate
entryRuleEDate returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEDateRule(), currentNode); } 
	 iv_ruleEDate=ruleEDate 
	 { $current=$iv_ruleEDate.current.getText(); }  
	 EOF 
;

// Rule EDate
ruleEDate returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    createLeafNode(grammarAccess.getEDateAccess().getSTRINGTerminalRuleCall(), null); 
    }

    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


